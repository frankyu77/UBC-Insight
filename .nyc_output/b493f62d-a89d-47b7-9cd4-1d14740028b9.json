{"/Users/frank/IdeaProjects/c0_team328/src/controller/InsightFacade.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":16},"end":{"line":29,"column":49}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":52}},"29":{"start":{"line":31,"column":11},"end":{"line":31,"column":38}},"30":{"start":{"line":32,"column":18},"end":{"line":32,"column":55}},"31":{"start":{"line":33,"column":24},"end":{"line":33,"column":67}},"32":{"start":{"line":34,"column":24},"end":{"line":34,"column":67}},"33":{"start":{"line":35,"column":24},"end":{"line":35,"column":67}},"34":{"start":{"line":36,"column":26},"end":{"line":36,"column":71}},"35":{"start":{"line":37,"column":28},"end":{"line":37,"column":75}},"36":{"start":{"line":38,"column":19},"end":{"line":38,"column":41}},"37":{"start":{"line":40,"column":25},"end":{"line":40,"column":27}},"38":{"start":{"line":41,"column":27},"end":{"line":41,"column":29}},"39":{"start":{"line":42,"column":10},"end":{"line":42,"column":18}},"40":{"start":{"line":43,"column":20},"end":{"line":43,"column":49}},"41":{"start":{"line":45,"column":8},"end":{"line":62,"column":11}},"42":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"43":{"start":{"line":48,"column":16},"end":{"line":48,"column":39}},"44":{"start":{"line":51,"column":12},"end":{"line":54,"column":13}},"45":{"start":{"line":52,"column":16},"end":{"line":52,"column":76}},"46":{"start":{"line":53,"column":16},"end":{"line":53,"column":23}},"47":{"start":{"line":56,"column":12},"end":{"line":61,"column":13}},"48":{"start":{"line":57,"column":16},"end":{"line":57,"column":70}},"49":{"start":{"line":59,"column":17},"end":{"line":61,"column":13}},"50":{"start":{"line":60,"column":16},"end":{"line":60,"column":67}},"51":{"start":{"line":67,"column":8},"end":{"line":97,"column":11}},"52":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"53":{"start":{"line":70,"column":16},"end":{"line":70,"column":81}},"54":{"start":{"line":73,"column":12},"end":{"line":73,"column":78}},"55":{"start":{"line":76,"column":33},"end":{"line":76,"column":56}},"56":{"start":{"line":77,"column":12},"end":{"line":77,"column":41}},"57":{"start":{"line":78,"column":12},"end":{"line":78,"column":78}},"58":{"start":{"line":82,"column":12},"end":{"line":82,"column":81}},"59":{"start":{"line":83,"column":12},"end":{"line":83,"column":88}},"60":{"start":{"line":85,"column":12},"end":{"line":88,"column":13}},"61":{"start":{"line":86,"column":16},"end":{"line":86,"column":87}},"62":{"start":{"line":87,"column":16},"end":{"line":87,"column":23}},"63":{"start":{"line":89,"column":12},"end":{"line":89,"column":88}},"64":{"start":{"line":90,"column":12},"end":{"line":90,"column":70}},"65":{"start":{"line":91,"column":12},"end":{"line":91,"column":57}},"66":{"start":{"line":92,"column":12},"end":{"line":92,"column":71}},"67":{"start":{"line":93,"column":12},"end":{"line":93,"column":47}},"68":{"start":{"line":96,"column":12},"end":{"line":96,"column":73}},"69":{"start":{"line":101,"column":8},"end":{"line":127,"column":11}},"70":{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},"71":{"start":{"line":104,"column":16},"end":{"line":104,"column":81}},"72":{"start":{"line":107,"column":12},"end":{"line":107,"column":78}},"73":{"start":{"line":110,"column":33},"end":{"line":110,"column":56}},"74":{"start":{"line":111,"column":12},"end":{"line":111,"column":41}},"75":{"start":{"line":112,"column":12},"end":{"line":112,"column":81}},"76":{"start":{"line":114,"column":12},"end":{"line":114,"column":84}},"77":{"start":{"line":116,"column":12},"end":{"line":119,"column":13}},"78":{"start":{"line":117,"column":16},"end":{"line":117,"column":90}},"79":{"start":{"line":118,"column":16},"end":{"line":118,"column":23}},"80":{"start":{"line":120,"column":12},"end":{"line":120,"column":70}},"81":{"start":{"line":121,"column":12},"end":{"line":121,"column":57}},"82":{"start":{"line":122,"column":12},"end":{"line":122,"column":71}},"83":{"start":{"line":123,"column":12},"end":{"line":123,"column":47}},"84":{"start":{"line":126,"column":12},"end":{"line":126,"column":73}},"85":{"start":{"line":131,"column":8},"end":{"line":131,"column":36}},"86":{"start":{"line":134,"column":8},"end":{"line":161,"column":11}},"87":{"start":{"line":136,"column":12},"end":{"line":139,"column":13}},"88":{"start":{"line":137,"column":16},"end":{"line":137,"column":76}},"89":{"start":{"line":138,"column":16},"end":{"line":138,"column":23}},"90":{"start":{"line":141,"column":12},"end":{"line":160,"column":15}},"91":{"start":{"line":143,"column":16},"end":{"line":156,"column":17}},"92":{"start":{"line":144,"column":20},"end":{"line":144,"column":96}},"93":{"start":{"line":148,"column":20},"end":{"line":155,"column":23}},"94":{"start":{"line":149,"column":24},"end":{"line":154,"column":25}},"95":{"start":{"line":150,"column":28},"end":{"line":150,"column":97}},"96":{"start":{"line":153,"column":28},"end":{"line":153,"column":40}},"97":{"start":{"line":159,"column":16},"end":{"line":159,"column":30}},"98":{"start":{"line":164,"column":21},"end":{"line":164,"column":23}},"99":{"start":{"line":165,"column":8},"end":{"line":180,"column":11}},"100":{"start":{"line":167,"column":12},"end":{"line":179,"column":15}},"101":{"start":{"line":168,"column":16},"end":{"line":171,"column":17}},"102":{"start":{"line":169,"column":20},"end":{"line":169,"column":36}},"103":{"start":{"line":170,"column":20},"end":{"line":170,"column":27}},"104":{"start":{"line":173,"column":35},"end":{"line":173,"column":47}},"105":{"start":{"line":174,"column":16},"end":{"line":176,"column":17}},"106":{"start":{"line":175,"column":20},"end":{"line":175,"column":36}},"107":{"start":{"line":178,"column":16},"end":{"line":178,"column":87}},"108":{"start":{"line":185,"column":8},"end":{"line":221,"column":11}},"109":{"start":{"line":187,"column":12},"end":{"line":220,"column":15}},"110":{"start":{"line":188,"column":16},"end":{"line":190,"column":17}},"111":{"start":{"line":189,"column":20},"end":{"line":189,"column":89}},"112":{"start":{"line":192,"column":31},"end":{"line":192,"column":47}},"113":{"start":{"line":199,"column":16},"end":{"line":214,"column":17}},"114":{"start":{"line":200,"column":50},"end":{"line":204,"column":21}},"115":{"start":{"line":205,"column":20},"end":{"line":205,"column":55}},"116":{"start":{"line":208,"column":50},"end":{"line":212,"column":21}},"117":{"start":{"line":213,"column":20},"end":{"line":213,"column":55}},"118":{"start":{"line":216,"column":16},"end":{"line":216,"column":31}},"119":{"start":{"line":217,"column":16},"end":{"line":219,"column":17}},"120":{"start":{"line":218,"column":20},"end":{"line":218,"column":36}},"121":{"start":{"line":225,"column":8},"end":{"line":249,"column":11}},"122":{"start":{"line":226,"column":32},"end":{"line":226,"column":86}},"123":{"start":{"line":227,"column":32},"end":{"line":227,"column":74}},"124":{"start":{"line":228,"column":34},"end":{"line":228,"column":78}},"125":{"start":{"line":229,"column":36},"end":{"line":229,"column":82}},"126":{"start":{"line":230,"column":25},"end":{"line":230,"column":30}},"127":{"start":{"line":231,"column":12},"end":{"line":237,"column":13}},"128":{"start":{"line":232,"column":16},"end":{"line":232,"column":55}},"129":{"start":{"line":233,"column":16},"end":{"line":233,"column":52}},"130":{"start":{"line":236,"column":16},"end":{"line":236,"column":37}},"131":{"start":{"line":239,"column":12},"end":{"line":248,"column":15}},"132":{"start":{"line":240,"column":16},"end":{"line":240,"column":67}},"133":{"start":{"line":241,"column":16},"end":{"line":241,"column":65}},"134":{"start":{"line":242,"column":16},"end":{"line":242,"column":97}},"135":{"start":{"line":243,"column":16},"end":{"line":243,"column":79}},"136":{"start":{"line":244,"column":16},"end":{"line":244,"column":64}},"137":{"start":{"line":245,"column":16},"end":{"line":245,"column":39}},"138":{"start":{"line":247,"column":16},"end":{"line":247,"column":37}},"139":{"start":{"line":252,"column":0},"end":{"line":252,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":34},"end":{"line":63,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":27},"end":{"line":45,"column":28}},"loc":{"start":{"line":45,"column":48},"end":{"line":62,"column":9}},"line":45},"9":{"name":"(anonymous_9)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":50},"end":{"line":98,"column":5}},"line":65},"10":{"name":"(anonymous_10)","decl":{"start":{"line":68,"column":18},"end":{"line":68,"column":19}},"loc":{"start":{"line":68,"column":36},"end":{"line":74,"column":9}},"line":68},"11":{"name":"(anonymous_11)","decl":{"start":{"line":75,"column":18},"end":{"line":75,"column":19}},"loc":{"start":{"line":75,"column":33},"end":{"line":94,"column":9}},"line":75},"12":{"name":"(anonymous_12)","decl":{"start":{"line":95,"column":19},"end":{"line":95,"column":20}},"loc":{"start":{"line":95,"column":30},"end":{"line":97,"column":9}},"line":95},"13":{"name":"(anonymous_13)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":53},"end":{"line":128,"column":5}},"line":99},"14":{"name":"(anonymous_14)","decl":{"start":{"line":102,"column":18},"end":{"line":102,"column":19}},"loc":{"start":{"line":102,"column":36},"end":{"line":108,"column":9}},"line":102},"15":{"name":"(anonymous_15)","decl":{"start":{"line":109,"column":18},"end":{"line":109,"column":19}},"loc":{"start":{"line":109,"column":33},"end":{"line":124,"column":9}},"line":109},"16":{"name":"(anonymous_16)","decl":{"start":{"line":125,"column":19},"end":{"line":125,"column":20}},"loc":{"start":{"line":125,"column":30},"end":{"line":127,"column":9}},"line":125},"17":{"name":"(anonymous_17)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":18},"end":{"line":132,"column":5}},"line":130},"18":{"name":"(anonymous_18)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":22},"end":{"line":162,"column":5}},"line":133},"19":{"name":"(anonymous_19)","decl":{"start":{"line":134,"column":27},"end":{"line":134,"column":28}},"loc":{"start":{"line":134,"column":48},"end":{"line":161,"column":9}},"line":134},"20":{"name":"(anonymous_20)","decl":{"start":{"line":142,"column":22},"end":{"line":142,"column":23}},"loc":{"start":{"line":142,"column":40},"end":{"line":157,"column":13}},"line":142},"21":{"name":"(anonymous_21)","decl":{"start":{"line":148,"column":72},"end":{"line":148,"column":73}},"loc":{"start":{"line":148,"column":83},"end":{"line":155,"column":21}},"line":148},"22":{"name":"(anonymous_22)","decl":{"start":{"line":158,"column":23},"end":{"line":158,"column":24}},"loc":{"start":{"line":158,"column":34},"end":{"line":160,"column":13}},"line":158},"23":{"name":"(anonymous_23)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":19},"end":{"line":181,"column":5}},"line":163},"24":{"name":"(anonymous_24)","decl":{"start":{"line":165,"column":27},"end":{"line":165,"column":28}},"loc":{"start":{"line":165,"column":48},"end":{"line":180,"column":9}},"line":165},"25":{"name":"(anonymous_25)","decl":{"start":{"line":167,"column":33},"end":{"line":167,"column":34}},"loc":{"start":{"line":167,"column":51},"end":{"line":179,"column":13}},"line":167},"26":{"name":"(anonymous_26)","decl":{"start":{"line":183,"column":4},"end":{"line":183,"column":5}},"loc":{"start":{"line":183,"column":70},"end":{"line":222,"column":5}},"line":183},"27":{"name":"(anonymous_27)","decl":{"start":{"line":185,"column":22},"end":{"line":185,"column":23}},"loc":{"start":{"line":185,"column":38},"end":{"line":221,"column":9}},"line":185},"28":{"name":"(anonymous_28)","decl":{"start":{"line":187,"column":76},"end":{"line":187,"column":77}},"loc":{"start":{"line":187,"column":91},"end":{"line":220,"column":13}},"line":187},"29":{"name":"(anonymous_29)","decl":{"start":{"line":224,"column":4},"end":{"line":224,"column":5}},"loc":{"start":{"line":224,"column":30},"end":{"line":250,"column":5}},"line":224},"30":{"name":"(anonymous_30)","decl":{"start":{"line":225,"column":27},"end":{"line":225,"column":28}},"loc":{"start":{"line":225,"column":48},"end":{"line":249,"column":9}},"line":225},"31":{"name":"(anonymous_31)","decl":{"start":{"line":239,"column":57},"end":{"line":239,"column":58}},"loc":{"start":{"line":239,"column":74},"end":{"line":246,"column":13}},"line":239},"32":{"name":"(anonymous_32)","decl":{"start":{"line":246,"column":21},"end":{"line":246,"column":22}},"loc":{"start":{"line":246,"column":32},"end":{"line":248,"column":13}},"line":246}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}],"line":47},"20":{"loc":{"start":{"line":51,"column":12},"end":{"line":54,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":54,"column":13}},{"start":{"line":51,"column":12},"end":{"line":54,"column":13}}],"line":51},"21":{"loc":{"start":{"line":56,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":61,"column":13}},{"start":{"line":56,"column":12},"end":{"line":61,"column":13}}],"line":56},"22":{"loc":{"start":{"line":59,"column":17},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":59,"column":17},"end":{"line":61,"column":13}},{"start":{"line":59,"column":17},"end":{"line":61,"column":13}}],"line":59},"23":{"loc":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},{"start":{"line":69,"column":12},"end":{"line":71,"column":13}}],"line":69},"24":{"loc":{"start":{"line":69,"column":16},"end":{"line":69,"column":64}},"type":"binary-expr","locations":[{"start":{"line":69,"column":16},"end":{"line":69,"column":22}},{"start":{"line":69,"column":26},"end":{"line":69,"column":64}}],"line":69},"25":{"loc":{"start":{"line":85,"column":12},"end":{"line":88,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":88,"column":13}},{"start":{"line":85,"column":12},"end":{"line":88,"column":13}}],"line":85},"26":{"loc":{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},{"start":{"line":103,"column":12},"end":{"line":105,"column":13}}],"line":103},"27":{"loc":{"start":{"line":103,"column":16},"end":{"line":103,"column":64}},"type":"binary-expr","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":22}},{"start":{"line":103,"column":26},"end":{"line":103,"column":64}}],"line":103},"28":{"loc":{"start":{"line":116,"column":12},"end":{"line":119,"column":13}},"type":"if","locations":[{"start":{"line":116,"column":12},"end":{"line":119,"column":13}},{"start":{"line":116,"column":12},"end":{"line":119,"column":13}}],"line":116},"29":{"loc":{"start":{"line":136,"column":12},"end":{"line":139,"column":13}},"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":139,"column":13}},{"start":{"line":136,"column":12},"end":{"line":139,"column":13}}],"line":136},"30":{"loc":{"start":{"line":143,"column":16},"end":{"line":156,"column":17}},"type":"if","locations":[{"start":{"line":143,"column":16},"end":{"line":156,"column":17}},{"start":{"line":143,"column":16},"end":{"line":156,"column":17}}],"line":143},"31":{"loc":{"start":{"line":149,"column":24},"end":{"line":154,"column":25}},"type":"if","locations":[{"start":{"line":149,"column":24},"end":{"line":154,"column":25}},{"start":{"line":149,"column":24},"end":{"line":154,"column":25}}],"line":149},"32":{"loc":{"start":{"line":168,"column":16},"end":{"line":171,"column":17}},"type":"if","locations":[{"start":{"line":168,"column":16},"end":{"line":171,"column":17}},{"start":{"line":168,"column":16},"end":{"line":171,"column":17}}],"line":168},"33":{"loc":{"start":{"line":174,"column":16},"end":{"line":176,"column":17}},"type":"if","locations":[{"start":{"line":174,"column":16},"end":{"line":176,"column":17}},{"start":{"line":174,"column":16},"end":{"line":176,"column":17}}],"line":174},"34":{"loc":{"start":{"line":188,"column":16},"end":{"line":190,"column":17}},"type":"if","locations":[{"start":{"line":188,"column":16},"end":{"line":190,"column":17}},{"start":{"line":188,"column":16},"end":{"line":190,"column":17}}],"line":188},"35":{"loc":{"start":{"line":199,"column":16},"end":{"line":214,"column":17}},"type":"if","locations":[{"start":{"line":199,"column":16},"end":{"line":214,"column":17}},{"start":{"line":199,"column":16},"end":{"line":214,"column":17}}],"line":199},"36":{"loc":{"start":{"line":217,"column":16},"end":{"line":219,"column":17}},"type":"if","locations":[{"start":{"line":217,"column":16},"end":{"line":219,"column":17}},{"start":{"line":217,"column":16},"end":{"line":219,"column":17}}],"line":217}},"s":{"0":1,"1":103,"2":103,"3":103,"4":103,"5":98,"6":451,"7":103,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":103,"21":103,"22":1,"23":1,"24":1,"25":7,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":267,"38":267,"39":267,"40":267,"41":269,"42":269,"43":158,"44":269,"45":5,"46":5,"47":264,"48":228,"49":36,"50":36,"51":36,"52":36,"53":0,"54":36,"55":36,"56":36,"57":36,"58":36,"59":36,"60":36,"61":5,"62":5,"63":31,"64":31,"65":31,"66":31,"67":31,"68":0,"69":228,"70":228,"71":102,"72":126,"73":124,"74":124,"75":124,"76":124,"77":123,"78":3,"79":3,"80":120,"81":120,"82":120,"83":120,"84":105,"85":284,"86":15,"87":15,"88":5,"89":5,"90":10,"91":10,"92":2,"93":8,"94":8,"95":0,"96":8,"97":2,"98":7,"99":7,"100":7,"101":7,"102":1,"103":1,"104":6,"105":6,"106":0,"107":6,"108":6,"109":9,"110":9,"111":0,"112":9,"113":9,"114":5,"115":5,"116":4,"117":4,"118":9,"119":9,"120":6,"121":72,"122":72,"123":72,"124":72,"125":72,"126":72,"127":72,"128":72,"129":72,"130":12,"131":60,"132":26,"133":26,"134":23,"135":2,"136":2,"137":2,"138":58,"139":1},"f":{"0":103,"1":451,"2":0,"3":1,"4":0,"5":1,"6":7,"7":269,"8":269,"9":36,"10":36,"11":36,"12":0,"13":228,"14":228,"15":124,"16":105,"17":284,"18":15,"19":15,"20":10,"21":8,"22":2,"23":7,"24":7,"25":7,"26":6,"27":9,"28":9,"29":72,"30":72,"31":26,"32":58},"b":{"0":[1,1,1],"1":[1,0],"2":[103,0],"3":[98,5],"4":[103,103],"5":[5,98],"6":[98,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[103,0],"15":[103,103],"16":[1,1,1],"17":[6,1],"18":[7,7],"19":[158,111],"20":[5,264],"21":[228,36],"22":[36,0],"23":[0,36],"24":[36,36],"25":[5,31],"26":[102,126],"27":[228,126],"28":[3,120],"29":[5,10],"30":[2,8],"31":[0,8],"32":[1,6],"33":[0,6],"34":[0,9],"35":[5,4],"36":[6,3]},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/InsightFacade.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n\tResultTooLargeError\n} from \"./IInsightFacade\";\nimport * as fs from \"fs\";\nimport path from \"node:path\";\nimport Section from \"./Section\";\nimport Dataset from \"./Dataset\";\nimport QueryOperator from \"./QueryOperator\";\nimport HandleDataset from \"./HandleDataset\";\nimport WhereOperator from \"./WhereOperator\";\nimport OptionsOperator from \"./OptionsOperator\";\nimport TransformOperator from \"./TransformOperator\";\n\nconst fsPromises = require(\"fs\").promises;\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasetsAddedSoFar: Dataset[] = [];\n\tprivate idDatasetsAddedSoFar: string[] = [];\n\tprivate dir = \"./data\";\n\tprivate handleDataset = new HandleDataset();\n\n\n\tpublic addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\n\t\treturn new Promise<string[]> ( (resolve, reject) => {\n\t\t\t// check if there is a data dir\n\t\t\tif (!fs.existsSync(this.dir)){\n\t\t\t\tfs.mkdirSync(this.dir);\n\t\t\t}\n\n\t\t\t// check if the id is valid\n\t\t\tif (!this.isValidID(id)) {\n\t\t\t\treject(new InsightError(\"Not a valid ID\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if the kind is Sections and not Rooms\n\t\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\t\tthis.handleSectionsKind(id, content, reject, resolve);\n\t\t\t} else if (kind === InsightDatasetKind.Rooms) {\n\t\t\t\tthis.handleRoomsKind(id, content, reject, resolve);\n\t\t\t}\n\t\t});\n\t}\n\n\t// CAN PROBABLY SOMEHOW MOVE THESE TWO METHODS TO THE HANDLEDATASET CLASS #########################################\n\tprivate handleRoomsKind(id: string,\n\t\tcontent: string,\n\t\treject: (reason?: any) => void,\n\t\tresolve: (value: (PromiseLike<string[]> | string[])) => void) {\n\n\t\t// checks if dataset already exists\n\t\tthis.handleDataset.isThereDatasetDir(id)\n\t\t\t.then(async (exists) => {\n\t\t\t\tif (exists || this.idDatasetsAddedSoFar.includes(id)) {\n\t\t\t\t\tthrow new InsightError(\"Dataset already added\");\n\t\t\t\t}\n\n\t\t\t\t// if it does not exist then unzip the dataset and read it\n\t\t\t\treturn await JSZip.loadAsync(content, {base64: true});\n\t\t\t})\n\t\t\t.then(async (zip: JSZip) => {\n\t\t\t\tlet currentDataset = new Dataset();\n\t\t\t\tcurrentDataset.setIDName(id);\n\t\t\t\tcurrentDataset.setKind(InsightDatasetKind.Rooms);\n\t\t\t\t// currentDataset.setValidity(true);\n\n\t\t\t\t// call to helper to handle reading the zip file\n//* **************************************************CHANGE THIS LINE**************************************************\n\t\t\t\tawait this.handleDataset.handleRoomsZip(zip, reject, currentDataset);\n\n\t\t\t\tconsole.log(\"length of dataset = \" + currentDataset.getValidRooms().length);\n\t\t\t\t// reject if there are no valid sections\n\t\t\t\tif (!currentDataset.getValidity()) {\n\t\t\t\t\treject(new InsightError(\"No valid rooms in dataset\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.log(\"length of dataset = \" + currentDataset.getValidRooms().length);\n\n\t\t\t\tawait this.handleDataset.addDatasetToDisk(currentDataset);\n\t\t\t\tthis.datasetsAddedSoFar.push(currentDataset);\n\n\t\t\t\tthis.idDatasetsAddedSoFar.push(currentDataset.getIDName());\n\t\t\t\tresolve(this.idDatasetsAddedSoFar);\n\t\t\t})\n\t\t\t.catch((error: any) => {\n\t\t\t\treject(new InsightError(\"Invalid Content\"));\n\t\t\t});\n\t}\n\n\tprivate handleSectionsKind(id: string,\n\t\tcontent: string,\n\t\treject: (reason?: any) => void,\n\t\tresolve: (value: (PromiseLike<string[]> | string[])) => void) {\n\n\t\t// checks if dataset already exists\n\t\tthis.handleDataset.isThereDatasetDir(id)\n\t\t\t.then(async (exists) => {\n\t\t\t\tif (exists || this.idDatasetsAddedSoFar.includes(id)) {\n\t\t\t\t\tthrow new InsightError(\"Dataset already added\");\n\t\t\t\t}\n\n\t\t\t\t// if it does not exist then unzip the dataset and read it\n\t\t\t\treturn await JSZip.loadAsync(content, {base64: true});\n\t\t\t})\n\t\t\t.then(async (zip: JSZip) => {\n\t\t\t\tlet currentDataset = new Dataset();\n\t\t\t\tcurrentDataset.setIDName(id);\n\t\t\t\tcurrentDataset.setKind(InsightDatasetKind.Sections);\n\t\t\t\t// call to helper to handle reading the zip file\n\t\t\t\tawait this.handleDataset.handleSectionsZip(zip, reject, currentDataset);\n\n\t\t\t\t// reject if there are no valid sections\n\t\t\t\tif (!currentDataset.getValidity()) {\n\t\t\t\t\treject(new InsightError(\"No valid sections in dataset\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.handleDataset.addDatasetToDisk(currentDataset);\n\t\t\t\tthis.datasetsAddedSoFar.push(currentDataset);\n\n\t\t\t\tthis.idDatasetsAddedSoFar.push(currentDataset.getIDName());\n\t\t\t\tresolve(this.idDatasetsAddedSoFar);\n\t\t\t})\n\t\t\t.catch((error: any) => {\n\t\t\t\treject(new InsightError(\"Invalid Content\"));\n\t\t\t});\n\t}\n\n// checks if id provided is valid\n\tprivate isValidID(id: string): boolean {\n\t\treturn /^[^\\s_]+$/.test(id);\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\treturn new Promise<string> ((resolve, reject) => {\n\t\t\t// check if the id is valid\n\t\t\tif (!this.isValidID(id)) {\n\t\t\t\treject(new InsightError(\"Not a valid ID\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if dataset exists\n\t\t\tthis.handleDataset.isThereDatasetDir(id)\n\t\t\t\t.then(async (exists) => {\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tthrow new NotFoundError(\"Valid ID has not been added yet\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if so then remove the dataset\n\t\t\t\t\t\tfs.unlink(this.handleDataset.getDatasetDirPath(id), (error) => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tthrow new InsightError(\"Error while removing file\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolve(id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t});\n\t}\n\n\n\tpublic listDatasets(): Promise<InsightDataset[]>{\n\t\tlet result: InsightDataset[] = [];\n\n\t\treturn new Promise<InsightDataset[]> ((resolve, reject) => {\n\t\t\t// read the directory\n\t\t\tfs.readdir(this.dir,  (error, files) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// keeps track of asynchronous code so that it iterates through all the files before returning\n\t\t\t\tlet pendingFiles = files.length;\n\t\t\t\tif (pendingFiles === 0) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\n\t\t\t\t// iterate through all the added datasets\n\t\t\t\tthis.iterateThroughFiles(files, reject, result, pendingFiles, resolve);\n\t\t\t});\n\t\t});\n\n\t}\n\n\t// iterate through all datasets and make them into InsightDatasets and add to the return list\n\tprivate iterateThroughFiles(files: string[],\n\t\treject: (reason?: any) => void,\n\t\tresult: InsightDataset[],\n\t\tpendingFiles: number,\n\t\tresolve: (value: (PromiseLike<InsightDataset[]> | InsightDataset[])) => void) {\n\n\t\t// iterate through each file in data dir\n\t\tfiles.forEach(async (file) => {\n\t\t\t// read the file\n\t\t\tfs.readFile(this.handleDataset.getDatasetDirPath(file), \"utf8\", (err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(new InsightError(\"Error when reading file\"));\n\t\t\t\t}\n\n\t\t\t\t// this sections just makes the InsightDataset object for each dataset\n\t\t\t\tconst object = JSON.parse(data);\n\t\t\t\t// const currentInsightDataset: InsightDataset = {\n\t\t\t\t// \tid: object.idName,\n\t\t\t\t// \tkind: InsightDatasetKind.Sections,\n\t\t\t\t// \tnumRows: object.validSections.length\n\t\t\t\t// };\n\t\t\t\t// let currentInsightDataset: any;\n\n\t\t\t\tif (object.kind === \"sections\") {\n\t\t\t\t\tconst currentInsightDataset: InsightDataset = {\n\t\t\t\t\t\tid: object.idName,\n\t\t\t\t\t\tkind: InsightDatasetKind.Sections,\n\t\t\t\t\t\tnumRows: object.validSections.length\n\t\t\t\t\t};\n\t\t\t\t\tresult.push(currentInsightDataset);\n\t\t\t\t} else {\n\t\t\t\t\tconst currentInsightDataset: InsightDataset = {\n\t\t\t\t\t\tid: object.idName,\n\t\t\t\t\t\tkind: InsightDatasetKind.Rooms,\n\t\t\t\t\t\tnumRows: object.validRooms.length\n\t\t\t\t\t};\n\t\t\t\t\tresult.push(currentInsightDataset);\n\t\t\t\t}\n\n\n\t\t\t\t// to keep track of asynchronous code\n\t\t\t\tpendingFiles--;\n\n\t\t\t\tif (pendingFiles === 0) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// /////////////////////////////////////////////QUERY////////////////////////////////////////////////\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\n\t\treturn new Promise<InsightResult[]>( (resolve, reject) => {\n\t\t\tlet queryOperator = new QueryOperator(this.idDatasetsAddedSoFar);\n\t\t\tlet whereOperator = new WhereOperator(queryOperator);\n\t\t\tlet optionsOperator: OptionsOperator = new OptionsOperator(queryOperator);\n\t\t\tlet transformOperator: TransformOperator = new TransformOperator(queryOperator);\n\t\t\tlet queryS: any = query;\n\t\t\ttry {\n\t\t\t\tqueryOperator.checkIfValidJson(queryS);\n\t\t\t\tqueryOperator.checkBaseEbnf(queryS);\n\t\t\t} catch (error) {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\n\t\t\tlet result: InsightResult[];\n\n\t\t\twhereOperator.handleWhere(queryS.WHERE).then( (resultWhere) => {\n\t\t\t\tresult = queryOperator.convertBoolean(resultWhere);\n\t\t\t\tresult = queryOperator.checkResultLength(result);\n\t\t\t\tresult = transformOperator.handleTransformations(queryS.TRANSFORMATIONS, result);\n\t\t\t\tresult = optionsOperator.handleOptions(queryS.OPTIONS, result);\n\t\t\t\tresult = queryOperator.compatibleFormat(result);\n\n\t\t\t\treturn resolve(result);\n\t\t\t}).catch((error) => {\n\t\t\t\treturn reject(error);// new InsightError(error.message));\n\t\t\t});\n\n\t\t});\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2ae5fc4da6c2a1c1952759e058e1303d9f4b0b74","contentHash":"531cf42eaad23fcf6486ca9beb93055a1635a082d8c3204e38207af6ed14d767"},"/Users/frank/IdeaProjects/c0_team328/src/controller/IInsightFacade.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":7,"column":0},"end":{"line":7,"column":62}},"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":113}},"2":{"start":{"line":10,"column":0},"end":{"line":13,"column":81}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":48}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":42}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":23}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":52}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":53}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":38}},"11":{"start":{"line":30,"column":8},"end":{"line":30,"column":23}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":59}},"13":{"start":{"line":34,"column":0},"end":{"line":34,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":1},"end":{"line":10,"column":2}},"loc":{"start":{"line":10,"column":31},"end":{"line":13,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":25},"end":{"line":18,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":25},"end":{"line":25,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":25},"end":{"line":32,"column":5}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":3},"end":{"line":13,"column":79}},"type":"binary-expr","locations":[{"start":{"line":13,"column":3},"end":{"line":13,"column":21}},{"start":{"line":13,"column":26},"end":{"line":13,"column":78}}],"line":13}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":285,"6":285,"7":1,"8":2,"9":2,"10":1,"11":3,"12":3,"13":1},"f":{"0":1,"1":285,"2":2,"3":3},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/IInsightFacade.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/IInsightFacade.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;AAEH,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IACzB,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AACpB,CAAC,EAHW,kBAAkB,kCAAlB,kBAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n     Sections = \"sections\",\n     Rooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n     id: string;\n     kind: InsightDatasetKind;\n     numRows: number;\n}\n\nexport interface InsightResult {\n     [key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n    /**\n     * Add a dataset to insightUBC.\n     *\n     * @param id  The id of the dataset being added.\n     * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n     * @param kind  The kind of the dataset\n     *\n     * @return Promise <string[]>\n     *\n     * The promise should fulfill on a successful add, reject for any failures.\n     * The promise should fulfill with a string array,\n     * containing the ids of all currently added datasets upon a successful add.\n     * The promise should reject with an InsightError describing the error.\n     *\n     * An id is invalid if it contains an underscore, or is only whitespace characters.\n     * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n     *\n     * After receiving the dataset, it should be processed into a data structure of\n     * your design. The processed data structure should be persisted to disk; your\n     * system should be able to load this persisted value into memory for answering\n     * queries.\n     *\n     * Ultimately, a dataset must be added or loaded from disk before queries can\n     * be successfully answered.\n     */\n     addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\n    /**\n     * Remove a dataset from insightUBC.\n     *\n     * @param id  The id of the dataset to remove.\n     *\n     * @return Promise <string>\n     *\n     * The promise should fulfill upon a successful removal. Reject on any error.\n     * A removed dataset behaves as if it never existed in the system (i.e. it was never added).\n     * Attempting to remove a dataset that hasn't been added yet counts as an error.\n     *\n     * An id is invalid if it contains an underscore, or is only whitespace characters.\n     *\n     * The promise should fulfill with the id of the dataset that was removed.\n     * The promise should reject with a NotFoundError (if a valid id was not yet added)\n     * or an InsightError (invalid id or any other source of failure) describing the error.\n     */\n     removeDataset(id: string): Promise<string>;\n\n\n    /**\n     * Perform a query on insightUBC.\n     *\n     * @param query  The query to be performed.\n     *\n     * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n     * or references multiple datasets, it should be rejected with an InsightError.\n     * If a query would return more than 5000 results, it should be rejected with a ResultTooLargeError.\n     *\n     * @return Promise <InsightResult[]>\n     *\n     * The promise should fulfill with an array of results.\n     * The promise should reject with an InsightError describing the error.\n     */\n     performQuery(query: unknown): Promise<InsightResult[]>;\n\n\n    /**\n     * List all currently added datasets, their types, and number of rows.\n     *\n     * @return Promise <InsightDataset[]>\n     * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n     */\n     listDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e12206d7a74553b7315c25e2ccb0f48a21729ac0","contentHash":"2db59a733bc9fbfd12cb7f9fb81ccd808e917ef40a47b57b78c951e9b3f3d0c7"},"/Users/frank/IdeaProjects/c0_team328/src/controller/Dataset.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":5,"column":13},"end":{"line":5,"column":15}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":22}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":19}},"5":{"start":{"line":8,"column":11},"end":{"line":8,"column":55}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":26}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":25}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":41}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":35}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":35}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":27}},"13":{"start":{"line":29,"column":8},"end":{"line":29,"column":34}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"15":{"start":{"line":35,"column":8},"end":{"line":35,"column":25}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":35}},"17":{"start":{"line":41,"column":0},"end":{"line":41,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":18},"end":{"line":12,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":29},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":23},"end":{"line":18,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":25},"end":{"line":21,"column":5}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":22},"end":{"line":24,"column":5}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":16},"end":{"line":27,"column":5}},"line":25},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":23},"end":{"line":30,"column":5}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":20},"end":{"line":33,"column":5}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":14},"end":{"line":36,"column":5}},"line":34},"9":{"name":"(anonymous_9)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":18},"end":{"line":39,"column":5}},"line":37}},"branchMap":{},"s":{"0":1,"1":1,"2":160,"3":160,"4":160,"5":160,"6":160,"7":160,"8":66943,"9":11284,"10":160,"11":78227,"12":302,"13":0,"14":67,"15":0,"16":159,"17":1},"f":{"0":160,"1":66943,"2":11284,"3":160,"4":78227,"5":302,"6":0,"7":67,"8":0,"9":159},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/Dataset.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/Dataset.ts"],"names":[],"mappings":";;AACA,qDAAoD;AAGpD,MAAqB,OAAO;IACnB,MAAM,GAAW,EAAE,CAAC;IACpB,aAAa,GAAc,EAAE,CAAC;IAC9B,UAAU,GAAW,EAAE,CAAC;IACxB,IAAI,GAAuB,mCAAkB,CAAC,QAAQ,CAAC;IACvD,cAAc,GAAY,KAAK,CAAC;IAEjC,SAAS,CAAC,EAAU;QAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAClB,CAAC;IAEM,eAAe,CAAC,OAAgB;QACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAEM,YAAY,CAAC,IAAU;QAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEM,OAAO,CAAC,WAA+B;QAC7C,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,IAAa;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC5B,CAAC;IAEM,SAAS;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAEM,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC3B,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B,CAAC;CACD;AA9CD,0BA8CC","sourcesContent":["import Section from \"./Section\";\nimport {InsightDatasetKind} from \"./IInsightFacade\";\nimport Room from \"./Room\";\n\nexport default class Dataset {\n\tprivate idName: string = \"\";\n\tprivate validSections: Section[] = [];\n\tprivate validRooms: Room[] = [];\n\tprivate kind: InsightDatasetKind = InsightDatasetKind.Sections;\n\tprivate isValidDataset: boolean = false;\n\n\tpublic setIDName(id: string) {\n\t\tthis.idName = id;\n\t}\n\n\tpublic addValidSection(section: Section) {\n\t\tthis.validSections.push(section);\n\t}\n\n\tpublic addValidRoom(room: Room) {\n\t\tthis.validRooms.push(room);\n\t}\n\n\tpublic setKind(datasetKind: InsightDatasetKind) {\n\t\tthis.kind = datasetKind;\n\t}\n\n\tpublic setValidity(bool: boolean) {\n\t\tthis.isValidDataset = bool;\n\t}\n\n\tpublic getIDName() {\n\t\treturn this.idName;\n\t}\n\n\tpublic getValidSections() {\n\t\treturn this.validSections;\n\t}\n\n\tpublic getValidRooms() {\n\t\treturn this.validRooms;\n\t}\n\n\tpublic getKind() {\n\t\treturn this.kind;\n\t}\n\n\tpublic getValidity() {\n\t\treturn this.isValidDataset;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"da2aba9e49736fc39ef0d044c944960c9fe1479a","contentHash":"9a671aeada878619deaaf2c44f98b5697cf664dbcd9ca2249eb1aa74d12052a1"},"/Users/frank/IdeaProjects/c0_team328/src/controller/QueryOperator.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/QueryOperator.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":57}},"5":{"start":{"line":9,"column":21},"end":{"line":9,"column":23}},"6":{"start":{"line":10,"column":24},"end":{"line":10,"column":26}},"7":{"start":{"line":11,"column":10},"end":{"line":11,"column":18}},"8":{"start":{"line":12,"column":27},"end":{"line":12,"column":29}},"9":{"start":{"line":13,"column":17},"end":{"line":13,"column":19}},"10":{"start":{"line":14,"column":11},"end":{"line":14,"column":74}},"11":{"start":{"line":15,"column":11},"end":{"line":16,"column":90}},"12":{"start":{"line":17,"column":17},"end":{"line":17,"column":37}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":47}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":38}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":36}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":38}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":35}},"19":{"start":{"line":37,"column":8},"end":{"line":37,"column":41}},"20":{"start":{"line":40,"column":8},"end":{"line":40,"column":59}},"21":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"22":{"start":{"line":44,"column":12},"end":{"line":44,"column":79}},"23":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"24":{"start":{"line":47,"column":12},"end":{"line":47,"column":25}},"25":{"start":{"line":49,"column":22},"end":{"line":49,"column":38}},"26":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"27":{"start":{"line":52,"column":12},"end":{"line":52,"column":76}},"28":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"29":{"start":{"line":55,"column":12},"end":{"line":55,"column":88}},"30":{"start":{"line":57,"column":8},"end":{"line":57,"column":30}},"31":{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},"32":{"start":{"line":61,"column":12},"end":{"line":61,"column":34}},"33":{"start":{"line":64,"column":12},"end":{"line":64,"column":73}},"34":{"start":{"line":68,"column":26},"end":{"line":68,"column":45}},"35":{"start":{"line":69,"column":8},"end":{"line":75,"column":9}},"36":{"start":{"line":70,"column":12},"end":{"line":70,"column":19}},"37":{"start":{"line":72,"column":13},"end":{"line":75,"column":9}},"38":{"start":{"line":74,"column":12},"end":{"line":74,"column":19}},"39":{"start":{"line":76,"column":8},"end":{"line":76,"column":88}},"40":{"start":{"line":79,"column":26},"end":{"line":83,"column":10}},"41":{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},"42":{"start":{"line":81,"column":16},"end":{"line":81,"column":28}},"43":{"start":{"line":84,"column":8},"end":{"line":84,"column":25}},"44":{"start":{"line":87,"column":23},"end":{"line":87,"column":56}},"45":{"start":{"line":88,"column":27},"end":{"line":88,"column":47}},"46":{"start":{"line":89,"column":8},"end":{"line":100,"column":11}},"47":{"start":{"line":90,"column":27},"end":{"line":90,"column":29}},"48":{"start":{"line":91,"column":12},"end":{"line":98,"column":15}},"49":{"start":{"line":92,"column":16},"end":{"line":97,"column":17}},"50":{"start":{"line":93,"column":20},"end":{"line":93,"column":40}},"51":{"start":{"line":96,"column":20},"end":{"line":96,"column":54}},"52":{"start":{"line":99,"column":12},"end":{"line":99,"column":26}},"53":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"54":{"start":{"line":104,"column":12},"end":{"line":104,"column":87}},"55":{"start":{"line":106,"column":8},"end":{"line":106,"column":22}},"56":{"start":{"line":109,"column":0},"end":{"line":109,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":28},"end":{"line":20,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":27},"end":{"line":23,"column":5}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":20},"end":{"line":26,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":28},"end":{"line":29,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":24},"end":{"line":32,"column":5}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":17},"end":{"line":35,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":20},"end":{"line":38,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":26},"end":{"line":41,"column":5}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":22},"end":{"line":58,"column":5}},"line":42},"10":{"name":"(anonymous_10)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":28},"end":{"line":66,"column":5}},"line":59},"11":{"name":"(anonymous_11)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":26},"end":{"line":77,"column":5}},"line":67},"12":{"name":"(anonymous_12)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":28},"end":{"line":85,"column":5}},"line":78},"13":{"name":"(anonymous_13)","decl":{"start":{"line":79,"column":51},"end":{"line":79,"column":52}},"loc":{"start":{"line":79,"column":69},"end":{"line":83,"column":9}},"line":79},"14":{"name":"(anonymous_14)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":29},"end":{"line":101,"column":5}},"line":86},"15":{"name":"(anonymous_15)","decl":{"start":{"line":89,"column":26},"end":{"line":89,"column":27}},"loc":{"start":{"line":89,"column":35},"end":{"line":100,"column":9}},"line":89},"16":{"name":"(anonymous_16)","decl":{"start":{"line":91,"column":40},"end":{"line":91,"column":41}},"loc":{"start":{"line":91,"column":58},"end":{"line":98,"column":13}},"line":91},"17":{"name":"(anonymous_17)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":30},"end":{"line":107,"column":5}},"line":102}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"4":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{"line":46,"column":8},"end":{"line":48,"column":9}}],"line":46},"5":{"loc":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},{"start":{"line":51,"column":8},"end":{"line":53,"column":9}}],"line":51},"6":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"7":{"loc":{"start":{"line":54,"column":14},"end":{"line":54,"column":74}},"type":"binary-expr","locations":[{"start":{"line":54,"column":14},"end":{"line":54,"column":42}},{"start":{"line":54,"column":46},"end":{"line":54,"column":74}}],"line":54},"8":{"loc":{"start":{"line":57,"column":15},"end":{"line":57,"column":29}},"type":"binary-expr","locations":[{"start":{"line":57,"column":15},"end":{"line":57,"column":23}},{"start":{"line":57,"column":27},"end":{"line":57,"column":29}}],"line":57},"9":{"loc":{"start":{"line":69,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":75,"column":9}},{"start":{"line":69,"column":8},"end":{"line":75,"column":9}}],"line":69},"10":{"loc":{"start":{"line":69,"column":12},"end":{"line":69,"column":98}},"type":"binary-expr","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":34}},{"start":{"line":69,"column":38},"end":{"line":69,"column":65}},{"start":{"line":69,"column":69},"end":{"line":69,"column":98}}],"line":69},"11":{"loc":{"start":{"line":72,"column":13},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":13},"end":{"line":75,"column":9}},{"start":{"line":72,"column":13},"end":{"line":75,"column":9}}],"line":72},"12":{"loc":{"start":{"line":72,"column":17},"end":{"line":73,"column":49}},"type":"binary-expr","locations":[{"start":{"line":72,"column":17},"end":{"line":72,"column":39}},{"start":{"line":72,"column":43},"end":{"line":72,"column":70}},{"start":{"line":72,"column":74},"end":{"line":72,"column":103}},{"start":{"line":73,"column":12},"end":{"line":73,"column":49}}],"line":72},"13":{"loc":{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},"type":"if","locations":[{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},{"start":{"line":80,"column":12},"end":{"line":82,"column":13}}],"line":80},"14":{"loc":{"start":{"line":92,"column":16},"end":{"line":97,"column":17}},"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":97,"column":17}},{"start":{"line":92,"column":16},"end":{"line":97,"column":17}}],"line":92},"15":{"loc":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},{"start":{"line":103,"column":8},"end":{"line":105,"column":9}}],"line":103}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":72,"6":72,"7":72,"8":72,"9":72,"10":72,"11":72,"12":72,"13":72,"14":106,"15":2,"16":50,"17":50,"18":71,"19":62,"20":50,"21":44,"22":0,"23":44,"24":2,"25":42,"26":42,"27":0,"28":42,"29":0,"30":42,"31":72,"32":72,"33":0,"34":72,"35":72,"36":57,"37":15,"38":3,"39":12,"40":26,"41":1679912,"42":74767,"43":26,"44":2,"45":2,"46":2,"47":9,"48":9,"49":18,"50":9,"51":9,"52":9,"53":26,"54":3,"55":23,"56":1},"f":{"0":1,"1":72,"2":106,"3":2,"4":50,"5":50,"6":71,"7":62,"8":50,"9":44,"10":72,"11":72,"12":26,"13":1679912,"14":2,"15":9,"16":18,"17":26},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,44],"4":[2,42],"5":[0,42],"6":[0,42],"7":[42,39],"8":[42,0],"9":[57,15],"10":[72,61,59],"11":[3,12],"12":[15,4,4,4],"13":[74767,1605145],"14":[9,9],"15":[3,23]},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/QueryOperator.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/QueryOperator.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tInsightError,\n\tInsightResult,\n\tResultTooLargeError,\n} from \"./IInsightFacade\";\nimport path from \"node:path\";\n\nexport default class QueryOperator {\n\n\tprotected datasetToQuery: InsightResult[] = [];\n\tprotected _datasetToQueryId: string = \"\";\n\tprotected dir = \"./data\";\n\tprotected idDatasetsAddedSoFar: string[] = [];\n\tpublic applyNames: string[] = [];\n\n\tpublic mkey = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\", \"lat\", \"lon\", \"seats\"];\n\tpublic skey = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\",\n\t\t\"fullname\" , \"shortname\" , \"number\" , \"name\" , \"address\" , \"type\" , \"furniture\" , \"href\"];\n\n\tpublic optionsKey = [\"COLUMNS\", \"ORDER\"];\n\n\n\tconstructor(idDatasets: string[]) {\n\t\tthis.idDatasetsAddedSoFar = idDatasets;\n\t}\n\n\tpublic getQueryingDatasetId(): string {\n\t\treturn this._datasetToQueryId;\n\n\t}\n\n\tpublic getApplyNames(): string[] {\n\t\treturn this.applyNames;\n\n\t}\n\n\tpublic setDatasetToQueryId(id: string): void {\n\t\tthis._datasetToQueryId = id;\n\t}\n\n\tpublic setDataset(dataset: InsightResult[]){\n\t\tthis.datasetToQuery = dataset;\n\t}\n\n\tpublic getDataset(): InsightResult[] {\n\t\treturn this.datasetToQuery;\n\t}\n\n\tpublic getDatasetIds(): string[] {\n\t\treturn this.idDatasetsAddedSoFar;\n\t}\n\n\tpublic getDatasetDirPath(id: string): string {\n\t\treturn path.join(this.dir, `${id}`);\n\t}\n\n\tpublic parseField(field: string) {\n\t\tif (typeof field !== \"string\") {\n\t\t\tthrow new InsightError(\"Invalid type in OPTIONS\");\n\t\t}\n\n\t\tif (this.applyNames.includes(field)) {\n\t\t\treturn field;\n\t\t}\n\n\t\tconst parts = field.split(\"_\");\n\t\t// Check if there is a second part; if not, return an empty string or the original item\n\n\t\tif (this.getQueryingDatasetId() !== String(parts[0])) {\n\t\t\tthrow new InsightError(\"Querying 2 Datasets.\");\n\t\t}\n\n\t\tif (!(this.mkey.includes(parts[1]) || this.skey.includes(parts[1]))) {\n\t\t\tthrow new InsightError(\"Invalid mkey or skey in columns.\");\n\t\t}\n\n\t\treturn parts[1] || \"\";\n\t}\n\n\tpublic checkIfValidJson(query: any): void {\n\t\ttry {\n\t\t\tJSON.stringify(query);\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Not a valid JSON.\");  // Not a string, can't be JSON\n\t\t}\n\t}\n\n\tpublic  checkBaseEbnf(queryS: any) {\n\t\tconst keysArray = Object.keys(queryS);\n\t\tif (keysArray.length === 2 && keysArray.includes(\"WHERE\") && keysArray.includes(\"OPTIONS\")) {\n\t\t\treturn;\n\t\t} else if (keysArray.length === 3 && keysArray.includes(\"WHERE\") && keysArray.includes(\"OPTIONS\") &&\n\t\t\tkeysArray.includes(\"TRANSFORMATIONS\")) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new InsightError(\"Invalid query! (No OPTIONS or WHERE)\");\n\t}\n\n\tpublic convertBoolean(boolArr: boolean[]): InsightResult[] {\n\t\tconst converted: InsightResult[] = this.getDataset().filter((value, index) => {\n\t\t\tif (boolArr[index]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\treturn converted;\n\t}\n\n\tpublic compatibleFormat(result: InsightResult[]) {\n\t\tconst prefix: string = this.getQueryingDatasetId() + \"_\";\n\t\tconst applyNames: string[] = this.getApplyNames();\n\n\t\treturn result.map((obj) => {\n\t\t\tconst newObj: InsightResult = {};\n\t\t\tObject.entries(obj).forEach(([key, value]) => {\n\t\t\t\tif (applyNames.includes(key)) {\n\t\t\t\t\tnewObj[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\tnewObj[`${prefix}${key}`] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn newObj;\n\t\t});\n\t}\n\n\tpublic checkResultLength(result: InsightResult[]): InsightResult[] {\n\t\tif (result.length > 5000) {\n\t\t\tthrow new ResultTooLargeError(\"Result greater than 5000\");\n\t\t}\n\t\treturn result;\n\t}\n\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bd325da553e2dc310ef6502ee4b96c690de8e434","contentHash":"e71aefef3bbdb05784cf91b333ac3f94966fba2260e745a3e87c53b858dc649a"},"/Users/frank/IdeaProjects/c0_team328/src/controller/HandleDataset.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/HandleDataset.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":57}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":55}},"6":{"start":{"line":10,"column":17},"end":{"line":10,"column":34}},"7":{"start":{"line":11,"column":24},"end":{"line":11,"column":67}},"8":{"start":{"line":12,"column":19},"end":{"line":12,"column":41}},"9":{"start":{"line":15,"column":10},"end":{"line":15,"column":18}},"10":{"start":{"line":16,"column":25},"end":{"line":16,"column":27}},"11":{"start":{"line":19,"column":25},"end":{"line":19,"column":60}},"12":{"start":{"line":20,"column":22},"end":{"line":20,"column":65}},"13":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"14":{"start":{"line":22,"column":12},"end":{"line":22,"column":58}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":81}},"16":{"start":{"line":30,"column":8},"end":{"line":30,"column":59}},"17":{"start":{"line":34,"column":8},"end":{"line":39,"column":9}},"18":{"start":{"line":35,"column":12},"end":{"line":35,"column":60}},"19":{"start":{"line":38,"column":12},"end":{"line":38,"column":82}},"20":{"start":{"line":43,"column":8},"end":{"line":50,"column":11}},"21":{"start":{"line":44,"column":29},"end":{"line":44,"column":55}},"22":{"start":{"line":45,"column":12},"end":{"line":49,"column":15}},"23":{"start":{"line":46,"column":16},"end":{"line":46,"column":30}},"24":{"start":{"line":48,"column":16},"end":{"line":48,"column":31}},"25":{"start":{"line":54,"column":29},"end":{"line":54,"column":245}},"26":{"start":{"line":55,"column":8},"end":{"line":60,"column":9}},"27":{"start":{"line":56,"column":12},"end":{"line":56,"column":34}},"28":{"start":{"line":59,"column":12},"end":{"line":59,"column":83}},"29":{"start":{"line":64,"column":8},"end":{"line":73,"column":46}},"30":{"start":{"line":77,"column":25},"end":{"line":77,"column":27}},"31":{"start":{"line":78,"column":34},"end":{"line":78,"column":39}},"32":{"start":{"line":80,"column":8},"end":{"line":109,"column":11}},"33":{"start":{"line":81,"column":12},"end":{"line":108,"column":13}},"34":{"start":{"line":84,"column":16},"end":{"line":84,"column":43}},"35":{"start":{"line":86,"column":16},"end":{"line":107,"column":20}},"36":{"start":{"line":88,"column":20},"end":{"line":104,"column":21}},"37":{"start":{"line":89,"column":54},"end":{"line":89,"column":79}},"38":{"start":{"line":90,"column":37},"end":{"line":90,"column":67}},"39":{"start":{"line":91,"column":24},"end":{"line":100,"column":25}},"40":{"start":{"line":93,"column":28},"end":{"line":99,"column":29}},"41":{"start":{"line":94,"column":49},"end":{"line":94,"column":75}},"42":{"start":{"line":95,"column":32},"end":{"line":98,"column":33}},"43":{"start":{"line":96,"column":36},"end":{"line":96,"column":62}},"44":{"start":{"line":97,"column":36},"end":{"line":97,"column":72}},"45":{"start":{"line":103,"column":24},"end":{"line":103,"column":94}},"46":{"start":{"line":106,"column":20},"end":{"line":106,"column":92}},"47":{"start":{"line":110,"column":8},"end":{"line":110,"column":36}},"48":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"49":{"start":{"line":112,"column":12},"end":{"line":112,"column":80}},"50":{"start":{"line":176,"column":8},"end":{"line":176,"column":83}},"51":{"start":{"line":177,"column":25},"end":{"line":177,"column":27}},"52":{"start":{"line":178,"column":35},"end":{"line":178,"column":40}},"53":{"start":{"line":179,"column":25},"end":{"line":179,"column":30}},"54":{"start":{"line":181,"column":8},"end":{"line":190,"column":11}},"55":{"start":{"line":184,"column":12},"end":{"line":189,"column":13}},"56":{"start":{"line":186,"column":16},"end":{"line":186,"column":34}},"57":{"start":{"line":188,"column":16},"end":{"line":188,"column":64}},"58":{"start":{"line":191,"column":8},"end":{"line":191,"column":34}},"59":{"start":{"line":192,"column":8},"end":{"line":192,"column":36}},"60":{"start":{"line":193,"column":8},"end":{"line":210,"column":11}},"61":{"start":{"line":195,"column":12},"end":{"line":200,"column":13}},"62":{"start":{"line":198,"column":16},"end":{"line":198,"column":68}},"63":{"start":{"line":201,"column":12},"end":{"line":209,"column":13}},"64":{"start":{"line":203,"column":16},"end":{"line":208,"column":17}},"65":{"start":{"line":204,"column":20},"end":{"line":204,"column":80}},"66":{"start":{"line":207,"column":20},"end":{"line":207,"column":68}},"67":{"start":{"line":211,"column":8},"end":{"line":211,"column":37}},"68":{"start":{"line":212,"column":8},"end":{"line":212,"column":36}},"69":{"start":{"line":219,"column":8},"end":{"line":233,"column":12}},"70":{"start":{"line":221,"column":12},"end":{"line":230,"column":13}},"71":{"start":{"line":222,"column":36},"end":{"line":222,"column":65}},"72":{"start":{"line":223,"column":33},"end":{"line":223,"column":113}},"73":{"start":{"line":225,"column":16},"end":{"line":225,"column":82}},"74":{"start":{"line":228,"column":16},"end":{"line":228,"column":35}},"75":{"start":{"line":229,"column":16},"end":{"line":229,"column":96}},"76":{"start":{"line":232,"column":12},"end":{"line":232,"column":84}},"77":{"start":{"line":236,"column":8},"end":{"line":251,"column":12}},"78":{"start":{"line":239,"column":12},"end":{"line":248,"column":13}},"79":{"start":{"line":240,"column":45},"end":{"line":240,"column":74}},"80":{"start":{"line":241,"column":33},"end":{"line":241,"column":113}},"81":{"start":{"line":242,"column":16},"end":{"line":242,"column":83}},"82":{"start":{"line":246,"column":16},"end":{"line":246,"column":35}},"83":{"start":{"line":247,"column":16},"end":{"line":247,"column":95}},"84":{"start":{"line":250,"column":12},"end":{"line":250,"column":84}},"85":{"start":{"line":254,"column":0},"end":{"line":254,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":36},"end":{"line":27,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":26},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":45},"end":{"line":40,"column":5}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":32},"end":{"line":51,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":27},"end":{"line":43,"column":28}},"loc":{"start":{"line":43,"column":48},"end":{"line":50,"column":9}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":45},"end":{"line":45,"column":46}},"loc":{"start":{"line":45,"column":51},"end":{"line":47,"column":13}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":47,"column":21},"end":{"line":47,"column":22}},"loc":{"start":{"line":47,"column":27},"end":{"line":49,"column":13}},"line":47},"8":{"name":"(anonymous_8)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":26},"end":{"line":61,"column":5}},"line":53},"9":{"name":"(anonymous_9)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":29},"end":{"line":74,"column":5}},"line":63},"10":{"name":"(anonymous_10)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":50},"end":{"line":114,"column":5}},"line":76},"11":{"name":"(anonymous_11)","decl":{"start":{"line":80,"column":20},"end":{"line":80,"column":21}},"loc":{"start":{"line":80,"column":48},"end":{"line":109,"column":9}},"line":80},"12":{"name":"(anonymous_12)","decl":{"start":{"line":86,"column":60},"end":{"line":86,"column":61}},"loc":{"start":{"line":86,"column":79},"end":{"line":105,"column":17}},"line":86},"13":{"name":"(anonymous_13)","decl":{"start":{"line":105,"column":25},"end":{"line":105,"column":26}},"loc":{"start":{"line":105,"column":36},"end":{"line":107,"column":17}},"line":105},"14":{"name":"(anonymous_14)","decl":{"start":{"line":175,"column":4},"end":{"line":175,"column":5}},"loc":{"start":{"line":175,"column":47},"end":{"line":217,"column":5}},"line":175},"15":{"name":"(anonymous_15)","decl":{"start":{"line":181,"column":20},"end":{"line":181,"column":21}},"loc":{"start":{"line":181,"column":54},"end":{"line":190,"column":9}},"line":181},"16":{"name":"(anonymous_16)","decl":{"start":{"line":193,"column":20},"end":{"line":193,"column":21}},"loc":{"start":{"line":193,"column":54},"end":{"line":210,"column":9}},"line":193},"17":{"name":"(anonymous_17)","decl":{"start":{"line":218,"column":4},"end":{"line":218,"column":5}},"loc":{"start":{"line":218,"column":47},"end":{"line":234,"column":5}},"line":218},"18":{"name":"(anonymous_18)","decl":{"start":{"line":219,"column":52},"end":{"line":219,"column":53}},"loc":{"start":{"line":219,"column":77},"end":{"line":231,"column":9}},"line":219},"19":{"name":"(anonymous_19)","decl":{"start":{"line":231,"column":17},"end":{"line":231,"column":18}},"loc":{"start":{"line":231,"column":28},"end":{"line":233,"column":9}},"line":231},"20":{"name":"(anonymous_20)","decl":{"start":{"line":235,"column":4},"end":{"line":235,"column":5}},"loc":{"start":{"line":235,"column":59},"end":{"line":252,"column":5}},"line":235},"21":{"name":"(anonymous_21)","decl":{"start":{"line":236,"column":52},"end":{"line":236,"column":53}},"loc":{"start":{"line":236,"column":77},"end":{"line":249,"column":9}},"line":236},"22":{"name":"(anonymous_22)","decl":{"start":{"line":249,"column":17},"end":{"line":249,"column":18}},"loc":{"start":{"line":249,"column":28},"end":{"line":251,"column":9}},"line":249}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":54,"column":133},"end":{"line":54,"column":192}},"type":"cond-expr","locations":[{"start":{"line":54,"column":166},"end":{"line":54,"column":170}},{"start":{"line":54,"column":173},"end":{"line":54,"column":192}}],"line":54},"4":{"loc":{"start":{"line":55,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":60,"column":9}},{"start":{"line":55,"column":8},"end":{"line":60,"column":9}}],"line":55},"5":{"loc":{"start":{"line":64,"column":17},"end":{"line":73,"column":44}},"type":"binary-expr","locations":[{"start":{"line":64,"column":17},"end":{"line":64,"column":53}},{"start":{"line":65,"column":12},"end":{"line":65,"column":47}},{"start":{"line":66,"column":12},"end":{"line":66,"column":44}},{"start":{"line":67,"column":12},"end":{"line":67,"column":49}},{"start":{"line":68,"column":12},"end":{"line":68,"column":49}},{"start":{"line":69,"column":12},"end":{"line":69,"column":43}},{"start":{"line":70,"column":12},"end":{"line":70,"column":42}},{"start":{"line":71,"column":12},"end":{"line":71,"column":43}},{"start":{"line":72,"column":12},"end":{"line":72,"column":43}},{"start":{"line":73,"column":12},"end":{"line":73,"column":44}}],"line":64},"6":{"loc":{"start":{"line":81,"column":12},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":108,"column":13}},{"start":{"line":81,"column":12},"end":{"line":108,"column":13}}],"line":81},"7":{"loc":{"start":{"line":81,"column":16},"end":{"line":83,"column":46}},"type":"binary-expr","locations":[{"start":{"line":81,"column":16},"end":{"line":81,"column":50}},{"start":{"line":82,"column":19},"end":{"line":82,"column":54}},{"start":{"line":83,"column":19},"end":{"line":83,"column":46}}],"line":81},"8":{"loc":{"start":{"line":91,"column":24},"end":{"line":100,"column":25}},"type":"if","locations":[{"start":{"line":91,"column":24},"end":{"line":100,"column":25}},{"start":{"line":91,"column":24},"end":{"line":100,"column":25}}],"line":91},"9":{"loc":{"start":{"line":95,"column":32},"end":{"line":98,"column":33}},"type":"if","locations":[{"start":{"line":95,"column":32},"end":{"line":98,"column":33}},{"start":{"line":95,"column":32},"end":{"line":98,"column":33}}],"line":95},"10":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"11":{"loc":{"start":{"line":184,"column":12},"end":{"line":189,"column":13}},"type":"if","locations":[{"start":{"line":184,"column":12},"end":{"line":189,"column":13}},{"start":{"line":184,"column":12},"end":{"line":189,"column":13}}],"line":184},"12":{"loc":{"start":{"line":195,"column":12},"end":{"line":200,"column":13}},"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":200,"column":13}},{"start":{"line":195,"column":12},"end":{"line":200,"column":13}}],"line":195},"13":{"loc":{"start":{"line":195,"column":16},"end":{"line":197,"column":76}},"type":"binary-expr","locations":[{"start":{"line":195,"column":16},"end":{"line":195,"column":42}},{"start":{"line":196,"column":16},"end":{"line":196,"column":51}},{"start":{"line":197,"column":16},"end":{"line":197,"column":76}}],"line":195},"14":{"loc":{"start":{"line":198,"column":39},"end":{"line":198,"column":67}},"type":"binary-expr","locations":[{"start":{"line":198,"column":39},"end":{"line":198,"column":59}},{"start":{"line":198,"column":63},"end":{"line":198,"column":67}}],"line":198},"15":{"loc":{"start":{"line":201,"column":12},"end":{"line":209,"column":13}},"type":"if","locations":[{"start":{"line":201,"column":12},"end":{"line":209,"column":13}},{"start":{"line":201,"column":12},"end":{"line":209,"column":13}}],"line":201},"16":{"loc":{"start":{"line":201,"column":16},"end":{"line":201,"column":117}},"type":"binary-expr","locations":[{"start":{"line":201,"column":16},"end":{"line":201,"column":84}},{"start":{"line":201,"column":88},"end":{"line":201,"column":117}}],"line":201},"17":{"loc":{"start":{"line":203,"column":16},"end":{"line":208,"column":17}},"type":"if","locations":[{"start":{"line":203,"column":16},"end":{"line":208,"column":17}},{"start":{"line":203,"column":16},"end":{"line":208,"column":17}}],"line":203}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":267,"10":267,"11":151,"12":151,"13":151,"14":151,"15":0,"16":442,"17":151,"18":151,"19":0,"20":274,"21":274,"22":274,"23":110,"24":164,"25":66943,"26":66943,"27":66943,"28":0,"29":66943,"30":124,"31":124,"32":124,"33":10111,"34":7936,"35":7936,"36":7936,"37":7936,"38":7934,"39":7934,"40":3928,"41":66943,"42":66943,"43":66943,"44":66943,"45":2,"46":0,"47":124,"48":124,"49":1,"50":36,"51":36,"52":36,"53":36,"54":36,"55":3156,"56":37,"57":37,"58":36,"59":36,"60":36,"61":3156,"62":97,"63":3156,"64":2356,"65":2294,"66":62,"67":36,"68":36,"69":37,"70":37,"71":37,"72":37,"73":37,"74":4,"75":4,"76":0,"77":2294,"78":2294,"79":2294,"80":2294,"81":2294,"82":0,"83":0,"84":0,"85":1},"f":{"0":3,"1":151,"2":442,"3":151,"4":274,"5":274,"6":110,"7":164,"8":66943,"9":66943,"10":124,"11":10111,"12":7936,"13":0,"14":36,"15":3156,"16":3156,"17":37,"18":37,"19":0,"20":2294,"21":2294,"22":0},"b":{"0":[1,1,1],"1":[2,1],"2":[3,3],"3":[25746,41197],"4":[66943,0],"5":[66943,66943,66943,66943,66943,66943,66943,66943,66943,66943],"6":[7936,2175],"7":[10111,8070,8059],"8":[3928,4006],"9":[66943,0],"10":[1,123],"11":[37,3119],"12":[97,3059],"13":[3156,3121,3090],"14":[97,0],"15":[2356,800],"16":[3156,2387],"17":[2294,62]},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/HandleDataset.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/HandleDataset.ts"],"names":[],"mappings":"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","sourcesContent":["import Dataset from \"./Dataset\";\nimport {InsightError} from \"./IInsightFacade\";\nimport path from \"node:path\";\nimport Section from \"./Section\";\nimport JSZip from \"jszip\";\n// import {ChildNode} from \"parse5/dist/tree-adapters/default\";\nimport {parse, defaultTreeAdapter} from \"parse5\";\nimport * as parse5 from \"parse5\";\n\n\nimport * as fs from \"fs\";\nimport TraverseTable from \"./TraverseTable\";\nimport Queue from \"./Queue\";\n\nconst fsPromises = require(\"fs\").promises;\n// var parse5 = require(\"parse5\").default;\n\nexport default class HandleDataset {\n\tprivate dir = \"./data\";\n\tprivate validBuildingLinks: string[] = [];\n\n\n    // converts dataset object to JSON string then add to disk\n\tpublic async addDatasetToDisk(dataset: Dataset) {\n\t\tlet jsonString = JSON.stringify(dataset, null, \"\\t\");\n\t\tlet newPath = this.getDatasetDirPath(dataset.getIDName());\n\t\ttry {\n\t\t\tawait this.saveToDataDir(newPath, jsonString);\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Error when saving to disk\");\n\t\t}\n\t}\n\n    // gets the path to the dataset\n\tpublic getDatasetDirPath(id: string): string {\n\t\treturn path.join(this.dir, `${id}`);\n\t}\n\n    // writes the file to data directory\n\tpublic async saveToDataDir(newPath: string, jsonString: string): Promise<void> {\n\t\ttry {\n\t\t\tawait fsPromises.writeFile(newPath, jsonString);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(\"Error when writing to disk\");\n\t\t}\n\t}\n\n    // checks if dataset already exists\n\tpublic async isThereDatasetDir(id: string): Promise<boolean> {\n\t\treturn new Promise<boolean>( (resolve, reject) => {\n\t\t\tconst filePath = this.getDatasetDirPath(id);\n\t\t\tfsPromises.access(filePath).then(() => {\n\t\t\t\tresolve(true);\n\t\t\t}).catch(() => {\n\t\t\t\tresolve(false);\n\t\t\t});\n\t\t});\n\n\t}\n\n    // creates a Section object, if invalid, then create a Section that is invalid\n\tprivate createSection(object: any): Section {\n\t\tlet currentSection = new Section(\n\t\t\tString(object.id),\n\t\t\tobject.Course,\n\t\t\tobject.Title,\n\t\t\tobject.Professor,\n\t\t\tobject.Subject,\n\t\t\t(object.Section === \"overall\") ? 1900 : Number(object.Year),\n\t\t\tobject.Avg,\n\t\t\tobject.Pass,\n\t\t\tobject.Fail,\n\t\t\tobject.Audit\n\t\t);\n\n\t\tif (this.isAValidSection(currentSection)) {\n\t\t\treturn currentSection;\n\t\t} else {\n\t\t\treturn new Section(\n\t\t\t\t\"invalid\",\n\t\t\t\t\"\",\n\t\t\t\t\"\",\n\t\t\t\t\"\",\n\t\t\t\t\"\",\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0\n\t\t\t);\n\t\t}\n\t}\n\n    // checks if the Section is valid or not\n\tprivate isAValidSection(section: Section): boolean {\n\t\treturn !(section.getSectionID() === undefined ||\n            section.getCourseID() === undefined ||\n            section.getTitle() === undefined ||\n            section.getInstructor() === undefined ||\n            section.getDepartment() === undefined ||\n            section.getYear() === undefined ||\n            section.getAvg() === undefined ||\n            section.getPass() === undefined ||\n            section.getFail() === undefined ||\n            section.getAudit() === undefined);\n\t}\n\n    // iterates through all courses and sections and adds only valid sections to the dataset\n\tpublic async handleSectionsZip(zip: JSZip, reject: (reason?: any) => void, dataset: Dataset) {\n\t\tconst promises: unknown[] = [];\n\t\tlet coursesFolderExists = false;\n        // iterate through the zip folder\n\t\tzip.forEach((relativePath: string, zipEntry: JSZip.JSZipObject) => {\n\t\t\tif (relativePath.startsWith(\"courses\")\n                && !relativePath.includes(\"courses/.\")\n                && !relativePath.endsWith(\"/\")) {\n\t\t\t\tcoursesFolderExists = true;\n\n                // read the content in the file\n\t\t\t\tpromises.push(\n\t\t\t\t\tzipEntry.async(\"string\").then((contentInFile) => {\n                        // parses the file into a list of JSON objects\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet parsedCourseJSONObjects = JSON.parse(contentInFile);\n\t\t\t\t\t\t\tlet result = parsedCourseJSONObjects.result;\n\t\t\t\t\t\t\tif (result.length !== 0) {\n                                // iterate through the JSON objects in the file\n\t\t\t\t\t\t\t\tfor (const object of result) {\n\t\t\t\t\t\t\t\t\tlet newSection = this.createSection(object);\n\t\t\t\t\t\t\t\t\tif (!(newSection.getCourseID() === \"invalid\")) {\n\t\t\t\t\t\t\t\t\t\tdataset.setValidity(true);\n\t\t\t\t\t\t\t\t\t\tdataset.addValidSection(newSection);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch(error) {\n\t\t\t\t\t\t\treject(new InsightError(\"Error while parsing file\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\treject(new InsightError(\"Error while adding dataset\"));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(promises);\n\n\t\tif (coursesFolderExists === false) {\n\t\t\tthrow new InsightError(\"Courses folder not found\");\n\t\t}\n\n\t}\n\n\t// HANDLE ROOMS ZIP ################################################################################################\n\t// public async handleRoomsZip(zip: JSZip, reject: (reason?: any) => void, dataset: Dataset) {\n\t// \tconsole.log(\"---------------------rooms zip reached---------------------\");\n\t//\n\t// \tconst promises: Promise<void>[] = [];\n\t// \tlet relevantFoldersExist = false;\n\t// \tlet indexExist = false;\n\t//\n\t// \tfor (const [relativePath, zipEntry] of Object.entries(zip.files)) {\n\t// \t\tif (relativePath === \"campus/\" ||\n\t// \t\t\trelativePath === \"campus/discover/\" ||\n\t// \t\t\trelativePath === \"campus/discover/buildings-and-classrooms/\") {\n\t// \t\t\trelevantFoldersExist = true;\n\t// \t\t}\n\t//\n\t// \t\tif (relativePath === \"index.htm\") {\n\t// \t\t\tindexExist = true;\n\t//\n\t// \t\t\t// try {\n\t// \t\t\t// \tconsole.log(\"Reading index.htm\");\n\t// \t\t\t// \tconst fileContent = await zipEntry.async(\"string\");\n\t// \t\t\t// \tconst document = parse5.parse(fileContent);\n\t// \t\t\t// \tconsole.log(\"File content:\", fileContent);\n\t// \t\t\t//\n\t// \t\t\t// \tthis.iterate(document);\n\t// \t\t\t// \t// Handle the file content here\n\t// \t\t\t// } catch (error) {\n\t// \t\t\t// \tconsole.log(\"Error reading index.htm:\", error);\n\t// \t\t\t// }\n\t//\n\t// \t\t\tpromises.push(\n\t// \t\t\t\tzipEntry.async(\"string\").then((contentInFile) => {\n\t// \t\t\t\t\t// parses the file into a list of JSON objects\n\t// \t\t\t\t\ttry {\n\t// \t\t\t\t\t\tconsole.log(contentInFile);\n\t// \t\t\t\t\t\tlet parsedIndex = parse5.parse(contentInFile);\n\t// \t\t\t\t\t\tconsole.log(\"File content:\");\n\t// \t\t\t\t\t\tthis.iterate(parsedIndex);\n\t// \t\t\t\t\t} catch(error) {\n\t// \t\t\t\t\t\tconsole.log(error);\n\t// \t\t\t\t\t\treject(new InsightError(\"Error while parsing file\"));\n\t// \t\t\t\t\t}\n\t// \t\t\t\t}).catch((error) => {\n\t// \t\t\t\t\treject(new InsightError(\"Error while adding dataset\"));\n\t// \t\t\t\t})\n\t// \t\t\t);\n\t// \t\t}\n\t//\n\t// \t\tif (relativePath.startsWith(\"campus/discover/buildings-and-classrooms/\") && relativePath.endsWith(\".htm\")) {\n\t// \t\t\t// Handle building files\n\t// \t\t}\n\t// \t}\n\t//\n\t// \tif (relevantFoldersExist === false || indexExist === false) {\n\t// \t\treject(new InsightError(\"Relevant folders/files not found\"));\n\t// \t\treturn;\n\t// \t}\n\t//\n\t// \tawait Promise.all(promises);\n\t// }\n\n\tpublic async handleRoomsZip(zip: JSZip, reject: (reason?: any) => void, dataset: Dataset) {\n\t\tconsole.log(\"---------------------rooms zip reached---------------------\");\n\n\t\tconst promises: unknown[] = [];\n\t\tlet relevantFoldersExist = false;\n\t\tlet indexExist = false;\n\n\t\t// iterate through the zip folder\n\t\tzip.forEach(async (relativePath: string, zipEntry: JSZip.JSZipObject) => {\n\t\t\t// console.log(relativePath);\n\n\t\t\t// handles the index.htm file\n\t\t\tif (relativePath.endsWith(\"index.htm\")) {\n\t\t\t\t// console.log(\"index.htm exists\");\n\t\t\t\tindexExist = true;\n\t\t\t\t// console.log(\"===============================================================================================INDEX\");\n\t\t\t\tthis.parseIndexHTML(promises, zipEntry, reject);\n\n\t\t\t}\n\n\t\t});\n\t\tconsole.log (\"done index\");\n\t\tawait Promise.all(promises);\n\n\t\tzip.forEach(async (relativePath: string, zipEntry: JSZip.JSZipObject) => {\n\t\t\t// check if the folders exist\n\t\t\tif (relativePath === \"campus/\" ||\n\t\t\t\trelativePath === \"campus/discover/\" ||\n\t\t\t\trelativePath === \"campus/discover/buildings-and-classrooms/\") {\n\n\t\t\t\trelevantFoldersExist = relevantFoldersExist && true;\n\t\t\t\t// so that if one of the folders don't exist it will be false\n\t\t\t}\n\n\n\t\t\tif (relativePath.startsWith(\"campus/discover/buildings-and-classrooms/\") && relativePath.endsWith(\".htm\")) {\n\t\t\t\t// console.log(\"===============================================================================================BUIDLING\");\n\t\t\t\tif (this.validBuildingLinks.includes(relativePath)) {\n\t\t\t\t\tthis.parseBuildingFile(promises, zipEntry, reject, dataset);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"BUILDING NOT LINKED IN INDEX.HTM\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t\tconsole.log (\"done buidling\");\n\t\tawait Promise.all(promises);\n\n\t\t// console.log(this.count);\n\t\t// if (relevantFoldersExist === false || indexExist === false) {\n\t\t// \treject(new InsightError(\"Relevant folders/files not found\"));\n\t\t// }\n\t}\n\n\n\tprivate parseIndexHTML(promises: unknown[], zipEntry: JSZip.JSZipObject, reject: (reason?: any) => void) {\n\t\tpromises.push(\n\t\t\tzipEntry.async(\"string\").then(async (contentInFile) => {\n\t\t\t\t// parses the file into a list of JSON objects\n\t\t\t\ttry {\n\t\t\t\t\tlet traverseTable = new TraverseTable();\n\t\t\t\t\tconst document = parse(contentInFile, {treeAdapter: defaultTreeAdapter});\n\t\t\t\t\t// this.validBuildingLinks = traverseTable.handleIndexHTML(document, this.buildingDictionary);\n\t\t\t\t\tthis.validBuildingLinks = traverseTable.handleIndexHTML(document);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\treject(new InsightError(\"Error while parsing index.htm file\"));\n\t\t\t\t}\n\t\t\t}).catch((error) => {\n\t\t\t\treject(new InsightError(\"Error while adding dataset\"));\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate parseBuildingFile(promises: unknown[],\n\t\tzipEntry: JSZip.JSZipObject,\n\t\treject: (reason?: any) => void,\n\t\tdataset: Dataset) {\n\n\t\tpromises.push(\n\t\t\tzipEntry.async(\"string\").then(async (contentInFile) => {\n\t\t\t\t// console.log(relativePath);\n\t\t\t\t// parses the file into a list of JSON objects\n\t\t\t\ttry {\n\t\t\t\t\tlet traverseTableBuildings = new TraverseTable();\n\t\t\t\t\tconst document = parse(contentInFile, {treeAdapter: defaultTreeAdapter});\n\t\t\t\t\tawait traverseTableBuildings.handleBuildingFile(document, dataset);\n\t\t\t\t\t// console.log(this.count);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\treject(new InsightError(\"Error while parsing building file\"));\n\t\t\t\t}\n\t\t\t}).catch((error) => {\n\t\t\t\treject(new InsightError(\"Error while adding dataset\"));\n\t\t\t})\n\t\t);\n\t}\n}\n\nexport interface BuildingInfo {\n\tname: string;\n\taddress: string;\n\tlink: string;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df527423eb2c445d7ff2a1dd394ee27e9bb74722","contentHash":"88c4c3a3d69a1ccaaa39965a6ea6cab50f4da69a37f80d3e294b300fc1759993"},"/Users/frank/IdeaProjects/c0_team328/src/controller/Section.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":21}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":37}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":23}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":26}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"17":{"start":{"line":45,"column":8},"end":{"line":45,"column":24}},"18":{"start":{"line":48,"column":8},"end":{"line":48,"column":25}},"19":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"20":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"21":{"start":{"line":57,"column":0},"end":{"line":57,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":81},"end":{"line":25,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":19},"end":{"line":28,"column":5}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":18},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":15},"end":{"line":34,"column":5}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":20},"end":{"line":37,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":20},"end":{"line":40,"column":5}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":14},"end":{"line":43,"column":5}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":13},"end":{"line":46,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":14},"end":{"line":49,"column":5}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":14},"end":{"line":52,"column":5}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":15},"end":{"line":55,"column":5}},"line":53}},"branchMap":{},"s":{"0":1,"1":66943,"2":66943,"3":66943,"4":66943,"5":66943,"6":66943,"7":66943,"8":66943,"9":66943,"10":66943,"11":66943,"12":133886,"13":66943,"14":66943,"15":66943,"16":66943,"17":66943,"18":66943,"19":66943,"20":66943,"21":1},"f":{"0":66943,"1":66943,"2":133886,"3":66943,"4":66943,"5":66943,"6":66943,"7":66943,"8":66943,"9":66943,"10":66943},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/Section.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/Section.ts"],"names":[],"mappings":";;AAAA,MAAqB,OAAO;IACV,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IAEb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAE/B,YACC,IAAY,EACZ,EAAU,EACV,KAAa,EACb,UAAkB,EAClB,IAAY,EACZ,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,KAAa;QAEb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CAGD;AA9ED,0BA8EC","sourcesContent":["export default class Section {\n\tprivate readonly uuid: string;\n\tprivate readonly id: string;\n\tprivate readonly title: string;\n\tprivate readonly instructor: string;\n\tprivate readonly dept: string;\n\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(\n\t\tuuid: string,\n\t\tid: string,\n\t\ttitle: string,\n\t\tinstructor: string,\n\t\tdept: string,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number\n\t) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n\n\tpublic getSectionID(): string {\n\t\treturn this.uuid;\n\t}\n\n\tpublic getCourseID(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getTitle(): string {\n\t\treturn this.title;\n\t}\n\n\tpublic getInstructor(): string {\n\t\treturn this.instructor;\n\t}\n\n\tpublic getDepartment(): string {\n\t\treturn this.dept;\n\t}\n\n\tpublic getYear(): number {\n\t\treturn this.year;\n\t}\n\n\tpublic getAvg(): number {\n\t\treturn this.avg;\n\t}\n\n\tpublic getPass(): number {\n\t\treturn this.pass;\n\t}\n\n\tpublic getFail(): number {\n\t\treturn this.fail;\n\t}\n\n\tpublic getAudit(): number {\n\t\treturn this.audit;\n\t}\n\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e9921abdaa5cf7a356b2e2b028cd14f4c5e3b364","contentHash":"666926a703dc553c68e09bffc793d36fb505e9caebffacae758ffd6e62f3782a"},"/Users/frank/IdeaProjects/c0_team328/src/controller/TraverseTable.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/TraverseTable.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":25},"end":{"line":29,"column":52}},"28":{"start":{"line":30,"column":15},"end":{"line":30,"column":49}},"29":{"start":{"line":31,"column":13},"end":{"line":31,"column":42}},"30":{"start":{"line":33,"column":23},"end":{"line":39,"column":5}},"31":{"start":{"line":40,"column":30},"end":{"line":46,"column":5}},"32":{"start":{"line":47,"column":22},"end":{"line":47,"column":27}},"33":{"start":{"line":48,"column":22},"end":{"line":48,"column":27}},"34":{"start":{"line":49,"column":12},"end":{"line":49,"column":13}},"35":{"start":{"line":50,"column":14},"end":{"line":50,"column":77}},"36":{"start":{"line":51,"column":30},"end":{"line":51,"column":32}},"37":{"start":{"line":52,"column":18},"end":{"line":52,"column":19}},"38":{"start":{"line":55,"column":20},"end":{"line":55,"column":55}},"39":{"start":{"line":56,"column":8},"end":{"line":56,"column":42}},"40":{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},"41":{"start":{"line":58,"column":24},"end":{"line":58,"column":56}},"42":{"start":{"line":59,"column":12},"end":{"line":59,"column":39}},"43":{"start":{"line":62,"column":12},"end":{"line":62,"column":43}},"44":{"start":{"line":63,"column":12},"end":{"line":63,"column":87}},"45":{"start":{"line":65,"column":8},"end":{"line":65,"column":44}},"46":{"start":{"line":68,"column":8},"end":{"line":82,"column":9}},"47":{"start":{"line":68,"column":21},"end":{"line":68,"column":22}},"48":{"start":{"line":69,"column":24},"end":{"line":69,"column":42}},"49":{"start":{"line":71,"column":12},"end":{"line":77,"column":13}},"50":{"start":{"line":73,"column":16},"end":{"line":73,"column":44}},"51":{"start":{"line":76,"column":16},"end":{"line":76,"column":29}},"52":{"start":{"line":78,"column":27},"end":{"line":78,"column":68}},"53":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"54":{"start":{"line":80,"column":16},"end":{"line":80,"column":30}},"55":{"start":{"line":83,"column":8},"end":{"line":83,"column":20}},"56":{"start":{"line":86,"column":8},"end":{"line":98,"column":9}},"57":{"start":{"line":86,"column":21},"end":{"line":86,"column":22}},"58":{"start":{"line":87,"column":24},"end":{"line":87,"column":42}},"59":{"start":{"line":89,"column":12},"end":{"line":93,"column":13}},"60":{"start":{"line":92,"column":16},"end":{"line":92,"column":29}},"61":{"start":{"line":94,"column":27},"end":{"line":94,"column":68}},"62":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"63":{"start":{"line":96,"column":16},"end":{"line":96,"column":30}},"64":{"start":{"line":99,"column":8},"end":{"line":99,"column":20}},"65":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"66":{"start":{"line":103,"column":12},"end":{"line":103,"column":19}},"67":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"68":{"start":{"line":106,"column":12},"end":{"line":106,"column":19}},"69":{"start":{"line":108,"column":8},"end":{"line":156,"column":9}},"70":{"start":{"line":110,"column":12},"end":{"line":154,"column":13}},"71":{"start":{"line":111,"column":36},"end":{"line":111,"column":40}},"72":{"start":{"line":114,"column":16},"end":{"line":134,"column":17}},"73":{"start":{"line":116,"column":20},"end":{"line":133,"column":21}},"74":{"start":{"line":123,"column":24},"end":{"line":123,"column":62}},"75":{"start":{"line":124,"column":24},"end":{"line":127,"column":25}},"76":{"start":{"line":126,"column":28},"end":{"line":126,"column":108}},"77":{"start":{"line":129,"column":25},"end":{"line":133,"column":21}},"78":{"start":{"line":131,"column":24},"end":{"line":131,"column":63}},"79":{"start":{"line":132,"column":24},"end":{"line":132,"column":30}},"80":{"start":{"line":155,"column":12},"end":{"line":155,"column":35}},"81":{"start":{"line":157,"column":8},"end":{"line":157,"column":15}},"82":{"start":{"line":163,"column":20},"end":{"line":163,"column":63}},"83":{"start":{"line":164,"column":8},"end":{"line":169,"column":9}},"84":{"start":{"line":166,"column":12},"end":{"line":166,"column":75}},"85":{"start":{"line":167,"column":24},"end":{"line":167,"column":64}},"86":{"start":{"line":168,"column":12},"end":{"line":168,"column":76}},"87":{"start":{"line":170,"column":8},"end":{"line":170,"column":15}},"88":{"start":{"line":173,"column":8},"end":{"line":189,"column":9}},"89":{"start":{"line":173,"column":21},"end":{"line":173,"column":22}},"90":{"start":{"line":174,"column":24},"end":{"line":174,"column":42}},"91":{"start":{"line":175,"column":12},"end":{"line":184,"column":13}},"92":{"start":{"line":177,"column":31},"end":{"line":177,"column":84}},"93":{"start":{"line":178,"column":30},"end":{"line":178,"column":83}},"94":{"start":{"line":181,"column":35},"end":{"line":181,"column":71}},"95":{"start":{"line":183,"column":16},"end":{"line":183,"column":36}},"96":{"start":{"line":185,"column":27},"end":{"line":185,"column":74}},"97":{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},"98":{"start":{"line":187,"column":16},"end":{"line":187,"column":30}},"99":{"start":{"line":190,"column":8},"end":{"line":190,"column":20}},"100":{"start":{"line":193,"column":8},"end":{"line":207,"column":9}},"101":{"start":{"line":193,"column":21},"end":{"line":193,"column":22}},"102":{"start":{"line":194,"column":24},"end":{"line":194,"column":42}},"103":{"start":{"line":196,"column":12},"end":{"line":202,"column":13}},"104":{"start":{"line":198,"column":16},"end":{"line":198,"column":44}},"105":{"start":{"line":201,"column":16},"end":{"line":201,"column":29}},"106":{"start":{"line":203,"column":27},"end":{"line":203,"column":76}},"107":{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},"108":{"start":{"line":205,"column":16},"end":{"line":205,"column":30}},"109":{"start":{"line":208,"column":8},"end":{"line":208,"column":20}},"110":{"start":{"line":211,"column":8},"end":{"line":223,"column":9}},"111":{"start":{"line":211,"column":21},"end":{"line":211,"column":22}},"112":{"start":{"line":212,"column":24},"end":{"line":212,"column":42}},"113":{"start":{"line":214,"column":12},"end":{"line":218,"column":13}},"114":{"start":{"line":217,"column":16},"end":{"line":217,"column":29}},"115":{"start":{"line":219,"column":27},"end":{"line":219,"column":76}},"116":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"117":{"start":{"line":221,"column":16},"end":{"line":221,"column":30}},"118":{"start":{"line":224,"column":8},"end":{"line":224,"column":20}},"119":{"start":{"line":344,"column":25},"end":{"line":344,"column":27}},"120":{"start":{"line":345,"column":8},"end":{"line":347,"column":9}},"121":{"start":{"line":346,"column":12},"end":{"line":346,"column":19}},"122":{"start":{"line":348,"column":8},"end":{"line":385,"column":9}},"123":{"start":{"line":350,"column":12},"end":{"line":382,"column":13}},"124":{"start":{"line":351,"column":36},"end":{"line":351,"column":40}},"125":{"start":{"line":352,"column":16},"end":{"line":352,"column":69}},"126":{"start":{"line":353,"column":16},"end":{"line":381,"column":17}},"127":{"start":{"line":354,"column":20},"end":{"line":354,"column":33}},"128":{"start":{"line":355,"column":44},"end":{"line":355,"column":85}},"129":{"start":{"line":356,"column":37},"end":{"line":356,"column":69}},"130":{"start":{"line":358,"column":20},"end":{"line":380,"column":24}},"131":{"start":{"line":359,"column":24},"end":{"line":379,"column":27}},"132":{"start":{"line":360,"column":39},"end":{"line":360,"column":41}},"133":{"start":{"line":361,"column":28},"end":{"line":363,"column":31}},"134":{"start":{"line":362,"column":32},"end":{"line":362,"column":46}},"135":{"start":{"line":364,"column":28},"end":{"line":375,"column":31}},"136":{"start":{"line":365,"column":45},"end":{"line":365,"column":61}},"137":{"start":{"line":366,"column":32},"end":{"line":373,"column":33}},"138":{"start":{"line":369,"column":36},"end":{"line":369,"column":88}},"139":{"start":{"line":372,"column":36},"end":{"line":372,"column":73}},"140":{"start":{"line":374,"column":32},"end":{"line":374,"column":42}},"141":{"start":{"line":377,"column":28},"end":{"line":377,"column":78}},"142":{"start":{"line":378,"column":28},"end":{"line":378,"column":42}},"143":{"start":{"line":386,"column":8},"end":{"line":386,"column":36}},"144":{"start":{"line":392,"column":8},"end":{"line":401,"column":9}},"145":{"start":{"line":394,"column":12},"end":{"line":400,"column":13}},"146":{"start":{"line":395,"column":16},"end":{"line":395,"column":54}},"147":{"start":{"line":397,"column":17},"end":{"line":400,"column":13}},"148":{"start":{"line":398,"column":16},"end":{"line":398,"column":55}},"149":{"start":{"line":399,"column":16},"end":{"line":399,"column":22}},"150":{"start":{"line":402,"column":8},"end":{"line":402,"column":29}},"151":{"start":{"line":405,"column":31},"end":{"line":405,"column":48}},"152":{"start":{"line":409,"column":30},"end":{"line":409,"column":50}},"153":{"start":{"line":410,"column":18},"end":{"line":410,"column":26}},"154":{"start":{"line":411,"column":18},"end":{"line":411,"column":26}},"155":{"start":{"line":416,"column":8},"end":{"line":449,"column":9}},"156":{"start":{"line":418,"column":12},"end":{"line":448,"column":13}},"157":{"start":{"line":420,"column":16},"end":{"line":420,"column":66}},"158":{"start":{"line":423,"column":17},"end":{"line":448,"column":13}},"159":{"start":{"line":425,"column":27},"end":{"line":425,"column":49}},"160":{"start":{"line":426,"column":16},"end":{"line":426,"column":55}},"161":{"start":{"line":429,"column":17},"end":{"line":448,"column":13}},"162":{"start":{"line":431,"column":27},"end":{"line":431,"column":49}},"163":{"start":{"line":432,"column":16},"end":{"line":432,"column":71}},"164":{"start":{"line":435,"column":17},"end":{"line":448,"column":13}},"165":{"start":{"line":437,"column":27},"end":{"line":437,"column":49}},"166":{"start":{"line":438,"column":16},"end":{"line":438,"column":66}},"167":{"start":{"line":441,"column":17},"end":{"line":448,"column":13}},"168":{"start":{"line":443,"column":16},"end":{"line":443,"column":59}},"169":{"start":{"line":445,"column":35},"end":{"line":445,"column":60}},"170":{"start":{"line":446,"column":16},"end":{"line":446,"column":63}},"171":{"start":{"line":450,"column":8},"end":{"line":450,"column":56}},"172":{"start":{"line":452,"column":22},"end":{"line":452,"column":172}},"173":{"start":{"line":453,"column":8},"end":{"line":453,"column":34}},"174":{"start":{"line":454,"column":8},"end":{"line":454,"column":38}},"175":{"start":{"line":458,"column":8},"end":{"line":458,"column":193}},"176":{"start":{"line":461,"column":0},"end":{"line":461,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":30},"end":{"line":66,"column":5}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":27},"end":{"line":84,"column":5}},"line":67},"9":{"name":"(anonymous_9)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":27},"end":{"line":100,"column":5}},"line":85},"10":{"name":"(anonymous_10)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":24},"end":{"line":158,"column":5}},"line":101},"11":{"name":"(anonymous_11)","decl":{"start":{"line":161,"column":4},"end":{"line":161,"column":5}},"loc":{"start":{"line":161,"column":48},"end":{"line":171,"column":5}},"line":161},"12":{"name":"(anonymous_12)","decl":{"start":{"line":172,"column":4},"end":{"line":172,"column":5}},"loc":{"start":{"line":172,"column":33},"end":{"line":191,"column":5}},"line":172},"13":{"name":"(anonymous_13)","decl":{"start":{"line":192,"column":4},"end":{"line":192,"column":5}},"loc":{"start":{"line":192,"column":35},"end":{"line":209,"column":5}},"line":192},"14":{"name":"(anonymous_14)","decl":{"start":{"line":210,"column":4},"end":{"line":210,"column":5}},"loc":{"start":{"line":210,"column":35},"end":{"line":225,"column":5}},"line":210},"15":{"name":"(anonymous_15)","decl":{"start":{"line":343,"column":4},"end":{"line":343,"column":5}},"loc":{"start":{"line":343,"column":61},"end":{"line":390,"column":5}},"line":343},"16":{"name":"(anonymous_16)","decl":{"start":{"line":358,"column":46},"end":{"line":358,"column":47}},"loc":{"start":{"line":358,"column":67},"end":{"line":380,"column":21}},"line":358},"17":{"name":"(anonymous_17)","decl":{"start":{"line":359,"column":45},"end":{"line":359,"column":46}},"loc":{"start":{"line":359,"column":59},"end":{"line":376,"column":25}},"line":359},"18":{"name":"(anonymous_18)","decl":{"start":{"line":361,"column":48},"end":{"line":361,"column":49}},"loc":{"start":{"line":361,"column":59},"end":{"line":363,"column":29}},"line":361},"19":{"name":"(anonymous_19)","decl":{"start":{"line":364,"column":47},"end":{"line":364,"column":48}},"loc":{"start":{"line":364,"column":53},"end":{"line":375,"column":29}},"line":364},"20":{"name":"(anonymous_20)","decl":{"start":{"line":376,"column":39},"end":{"line":376,"column":40}},"loc":{"start":{"line":376,"column":50},"end":{"line":379,"column":25}},"line":376},"21":{"name":"(anonymous_21)","decl":{"start":{"line":391,"column":4},"end":{"line":391,"column":5}},"loc":{"start":{"line":391,"column":36},"end":{"line":403,"column":5}},"line":391},"22":{"name":"(anonymous_22)","decl":{"start":{"line":404,"column":4},"end":{"line":404,"column":5}},"loc":{"start":{"line":404,"column":51},"end":{"line":455,"column":5}},"line":404},"23":{"name":"(anonymous_23)","decl":{"start":{"line":457,"column":4},"end":{"line":457,"column":5}},"loc":{"start":{"line":457,"column":150},"end":{"line":459,"column":5}},"line":457}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},{"start":{"line":57,"column":8},"end":{"line":64,"column":9}}],"line":57},"20":{"loc":{"start":{"line":71,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":77,"column":13}},{"start":{"line":71,"column":12},"end":{"line":77,"column":13}}],"line":71},"21":{"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":93}},"type":"binary-expr","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":38}},{"start":{"line":71,"column":42},"end":{"line":71,"column":93}}],"line":71},"22":{"loc":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},{"start":{"line":79,"column":12},"end":{"line":81,"column":13}}],"line":79},"23":{"loc":{"start":{"line":89,"column":12},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":93,"column":13}},{"start":{"line":89,"column":12},"end":{"line":93,"column":13}}],"line":89},"24":{"loc":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},{"start":{"line":95,"column":12},"end":{"line":97,"column":13}}],"line":95},"25":{"loc":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},{"start":{"line":102,"column":8},"end":{"line":104,"column":9}}],"line":102},"26":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},{"start":{"line":105,"column":8},"end":{"line":107,"column":9}}],"line":105},"27":{"loc":{"start":{"line":110,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":154,"column":13}},{"start":{"line":110,"column":12},"end":{"line":154,"column":13}}],"line":110},"28":{"loc":{"start":{"line":116,"column":20},"end":{"line":133,"column":21}},"type":"if","locations":[{"start":{"line":116,"column":20},"end":{"line":133,"column":21}},{"start":{"line":116,"column":20},"end":{"line":133,"column":21}}],"line":116},"29":{"loc":{"start":{"line":116,"column":24},"end":{"line":116,"column":97}},"type":"binary-expr","locations":[{"start":{"line":116,"column":24},"end":{"line":116,"column":44}},{"start":{"line":116,"column":48},"end":{"line":116,"column":97}}],"line":116},"30":{"loc":{"start":{"line":123,"column":40},"end":{"line":123,"column":61}},"type":"binary-expr","locations":[{"start":{"line":123,"column":40},"end":{"line":123,"column":53}},{"start":{"line":123,"column":57},"end":{"line":123,"column":61}}],"line":123},"31":{"loc":{"start":{"line":124,"column":24},"end":{"line":127,"column":25}},"type":"if","locations":[{"start":{"line":124,"column":24},"end":{"line":127,"column":25}},{"start":{"line":124,"column":24},"end":{"line":127,"column":25}}],"line":124},"32":{"loc":{"start":{"line":129,"column":25},"end":{"line":133,"column":21}},"type":"if","locations":[{"start":{"line":129,"column":25},"end":{"line":133,"column":21}},{"start":{"line":129,"column":25},"end":{"line":133,"column":21}}],"line":129},"33":{"loc":{"start":{"line":129,"column":29},"end":{"line":129,"column":103}},"type":"binary-expr","locations":[{"start":{"line":129,"column":29},"end":{"line":129,"column":49}},{"start":{"line":129,"column":53},"end":{"line":129,"column":103}}],"line":129},"34":{"loc":{"start":{"line":131,"column":40},"end":{"line":131,"column":62}},"type":"binary-expr","locations":[{"start":{"line":131,"column":40},"end":{"line":131,"column":53}},{"start":{"line":131,"column":57},"end":{"line":131,"column":62}}],"line":131},"35":{"loc":{"start":{"line":164,"column":8},"end":{"line":169,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":169,"column":9}},{"start":{"line":164,"column":8},"end":{"line":169,"column":9}}],"line":164},"36":{"loc":{"start":{"line":175,"column":12},"end":{"line":184,"column":13}},"type":"if","locations":[{"start":{"line":175,"column":12},"end":{"line":184,"column":13}},{"start":{"line":175,"column":12},"end":{"line":184,"column":13}}],"line":175},"37":{"loc":{"start":{"line":175,"column":16},"end":{"line":175,"column":84}},"type":"binary-expr","locations":[{"start":{"line":175,"column":16},"end":{"line":175,"column":40}},{"start":{"line":175,"column":44},"end":{"line":175,"column":84}}],"line":175},"38":{"loc":{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},"type":"if","locations":[{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},{"start":{"line":186,"column":12},"end":{"line":188,"column":13}}],"line":186},"39":{"loc":{"start":{"line":196,"column":12},"end":{"line":202,"column":13}},"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":202,"column":13}},{"start":{"line":196,"column":12},"end":{"line":202,"column":13}}],"line":196},"40":{"loc":{"start":{"line":196,"column":16},"end":{"line":196,"column":93}},"type":"binary-expr","locations":[{"start":{"line":196,"column":16},"end":{"line":196,"column":38}},{"start":{"line":196,"column":42},"end":{"line":196,"column":93}}],"line":196},"41":{"loc":{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},"type":"if","locations":[{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},{"start":{"line":204,"column":12},"end":{"line":206,"column":13}}],"line":204},"42":{"loc":{"start":{"line":214,"column":12},"end":{"line":218,"column":13}},"type":"if","locations":[{"start":{"line":214,"column":12},"end":{"line":218,"column":13}},{"start":{"line":214,"column":12},"end":{"line":218,"column":13}}],"line":214},"43":{"loc":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"type":"if","locations":[{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},{"start":{"line":220,"column":12},"end":{"line":222,"column":13}}],"line":220},"44":{"loc":{"start":{"line":345,"column":8},"end":{"line":347,"column":9}},"type":"if","locations":[{"start":{"line":345,"column":8},"end":{"line":347,"column":9}},{"start":{"line":345,"column":8},"end":{"line":347,"column":9}}],"line":345},"45":{"loc":{"start":{"line":345,"column":12},"end":{"line":345,"column":37}},"type":"binary-expr","locations":[{"start":{"line":345,"column":12},"end":{"line":345,"column":17}},{"start":{"line":345,"column":21},"end":{"line":345,"column":37}}],"line":345},"46":{"loc":{"start":{"line":350,"column":12},"end":{"line":382,"column":13}},"type":"if","locations":[{"start":{"line":350,"column":12},"end":{"line":382,"column":13}},{"start":{"line":350,"column":12},"end":{"line":382,"column":13}}],"line":350},"47":{"loc":{"start":{"line":353,"column":16},"end":{"line":381,"column":17}},"type":"if","locations":[{"start":{"line":353,"column":16},"end":{"line":381,"column":17}},{"start":{"line":353,"column":16},"end":{"line":381,"column":17}}],"line":353},"48":{"loc":{"start":{"line":366,"column":32},"end":{"line":373,"column":33}},"type":"if","locations":[{"start":{"line":366,"column":32},"end":{"line":373,"column":33}},{"start":{"line":366,"column":32},"end":{"line":373,"column":33}}],"line":366},"49":{"loc":{"start":{"line":394,"column":12},"end":{"line":400,"column":13}},"type":"if","locations":[{"start":{"line":394,"column":12},"end":{"line":400,"column":13}},{"start":{"line":394,"column":12},"end":{"line":400,"column":13}}],"line":394},"50":{"loc":{"start":{"line":394,"column":16},"end":{"line":394,"column":96}},"type":"binary-expr","locations":[{"start":{"line":394,"column":16},"end":{"line":394,"column":36}},{"start":{"line":394,"column":40},"end":{"line":394,"column":96}}],"line":394},"51":{"loc":{"start":{"line":395,"column":32},"end":{"line":395,"column":53}},"type":"binary-expr","locations":[{"start":{"line":395,"column":32},"end":{"line":395,"column":45}},{"start":{"line":395,"column":49},"end":{"line":395,"column":53}}],"line":395},"52":{"loc":{"start":{"line":397,"column":17},"end":{"line":400,"column":13}},"type":"if","locations":[{"start":{"line":397,"column":17},"end":{"line":400,"column":13}},{"start":{"line":397,"column":17},"end":{"line":400,"column":13}}],"line":397},"53":{"loc":{"start":{"line":397,"column":21},"end":{"line":397,"column":102}},"type":"binary-expr","locations":[{"start":{"line":397,"column":21},"end":{"line":397,"column":41}},{"start":{"line":397,"column":45},"end":{"line":397,"column":102}}],"line":397},"54":{"loc":{"start":{"line":398,"column":32},"end":{"line":398,"column":54}},"type":"binary-expr","locations":[{"start":{"line":398,"column":32},"end":{"line":398,"column":45}},{"start":{"line":398,"column":49},"end":{"line":398,"column":54}}],"line":398},"55":{"loc":{"start":{"line":418,"column":12},"end":{"line":448,"column":13}},"type":"if","locations":[{"start":{"line":418,"column":12},"end":{"line":448,"column":13}},{"start":{"line":418,"column":12},"end":{"line":448,"column":13}}],"line":418},"56":{"loc":{"start":{"line":418,"column":16},"end":{"line":419,"column":81}},"type":"binary-expr","locations":[{"start":{"line":418,"column":16},"end":{"line":418,"column":36}},{"start":{"line":419,"column":16},"end":{"line":419,"column":81}}],"line":418},"57":{"loc":{"start":{"line":423,"column":17},"end":{"line":448,"column":13}},"type":"if","locations":[{"start":{"line":423,"column":17},"end":{"line":448,"column":13}},{"start":{"line":423,"column":17},"end":{"line":448,"column":13}}],"line":423},"58":{"loc":{"start":{"line":423,"column":21},"end":{"line":424,"column":83}},"type":"binary-expr","locations":[{"start":{"line":423,"column":21},"end":{"line":423,"column":41}},{"start":{"line":424,"column":16},"end":{"line":424,"column":83}}],"line":423},"59":{"loc":{"start":{"line":429,"column":17},"end":{"line":448,"column":13}},"type":"if","locations":[{"start":{"line":429,"column":17},"end":{"line":448,"column":13}},{"start":{"line":429,"column":17},"end":{"line":448,"column":13}}],"line":429},"60":{"loc":{"start":{"line":429,"column":21},"end":{"line":430,"column":84}},"type":"binary-expr","locations":[{"start":{"line":429,"column":21},"end":{"line":429,"column":41}},{"start":{"line":430,"column":16},"end":{"line":430,"column":84}}],"line":429},"61":{"loc":{"start":{"line":432,"column":32},"end":{"line":432,"column":70}},"type":"binary-expr","locations":[{"start":{"line":432,"column":32},"end":{"line":432,"column":64}},{"start":{"line":432,"column":68},"end":{"line":432,"column":70}}],"line":432},"62":{"loc":{"start":{"line":435,"column":17},"end":{"line":448,"column":13}},"type":"if","locations":[{"start":{"line":435,"column":17},"end":{"line":448,"column":13}},{"start":{"line":435,"column":17},"end":{"line":448,"column":13}}],"line":435},"63":{"loc":{"start":{"line":435,"column":21},"end":{"line":436,"column":79}},"type":"binary-expr","locations":[{"start":{"line":435,"column":21},"end":{"line":435,"column":41}},{"start":{"line":436,"column":16},"end":{"line":436,"column":79}}],"line":435},"64":{"loc":{"start":{"line":438,"column":27},"end":{"line":438,"column":65}},"type":"binary-expr","locations":[{"start":{"line":438,"column":27},"end":{"line":438,"column":59}},{"start":{"line":438,"column":63},"end":{"line":438,"column":65}}],"line":438},"65":{"loc":{"start":{"line":441,"column":17},"end":{"line":448,"column":13}},"type":"if","locations":[{"start":{"line":441,"column":17},"end":{"line":448,"column":13}},{"start":{"line":441,"column":17},"end":{"line":448,"column":13}}],"line":441},"66":{"loc":{"start":{"line":441,"column":21},"end":{"line":442,"column":71}},"type":"binary-expr","locations":[{"start":{"line":441,"column":21},"end":{"line":441,"column":41}},{"start":{"line":442,"column":16},"end":{"line":442,"column":71}}],"line":441}},"s":{"0":1,"1":17,"2":17,"3":17,"4":17,"5":17,"6":11284,"7":17,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":17,"21":17,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":2331,"31":2331,"32":2331,"33":2331,"34":2331,"35":2331,"36":2331,"37":2331,"38":37,"39":37,"40":37,"41":33,"42":33,"43":4,"44":4,"45":33,"46":36068,"47":36068,"48":36064,"49":36064,"50":33,"51":33,"52":36031,"53":36031,"54":264,"55":35771,"56":759,"57":759,"58":759,"59":759,"60":33,"61":726,"62":726,"63":0,"64":726,"65":65868,"66":0,"67":65868,"68":41547,"69":24321,"70":65835,"71":2442,"72":2442,"73":26862,"74":12210,"75":12210,"76":2442,"77":14652,"78":0,"79":0,"80":65835,"81":24321,"82":2294,"83":2294,"84":1364,"85":1364,"86":1364,"87":2294,"88":1256957,"89":1256957,"90":1256957,"91":1256957,"92":1364,"93":1364,"94":1364,"95":1364,"96":1255593,"97":1255593,"98":13640,"99":1241953,"100":2944070,"101":2944070,"102":2943140,"103":2943140,"104":1364,"105":1364,"106":2941776,"107":2941776,"108":13640,"109":2929066,"110":31372,"111":31372,"112":31372,"113":31372,"114":1364,"115":30008,"116":30008,"117":0,"118":30008,"119":1364,"120":1364,"121":0,"122":1364,"123":23932,"124":11284,"125":11284,"126":11284,"127":11284,"128":11284,"129":11284,"130":11284,"131":11284,"132":11284,"133":11284,"134":11284,"135":11284,"136":11284,"137":11284,"138":11284,"139":0,"140":11284,"141":0,"142":0,"143":1364,"144":11284,"145":124124,"146":56420,"147":67704,"148":0,"149":0,"150":11284,"151":11284,"152":11284,"153":11284,"154":11284,"155":11284,"156":124124,"157":11284,"158":112840,"159":11284,"160":11284,"161":101556,"162":11284,"163":11284,"164":90272,"165":11284,"166":11284,"167":78988,"168":11284,"169":11284,"170":11284,"171":11284,"172":11284,"173":11284,"174":11284,"175":11284,"176":1},"f":{"0":17,"1":11284,"2":0,"3":1,"4":0,"5":1,"6":1,"7":37,"8":36068,"9":759,"10":65868,"11":2294,"12":1256957,"13":2944070,"14":31372,"15":1364,"16":11284,"17":11284,"18":11284,"19":11284,"20":0,"21":11284,"22":11284,"23":11284},"b":{"0":[1,1,1],"1":[1,0],"2":[17,0],"3":[17,0],"4":[17,17],"5":[2,15],"6":[15,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[17,0],"15":[17,17],"16":[1,1,1],"17":[1,0],"18":[1,1],"19":[33,4],"20":[33,36031],"21":[36064,34],"22":[264,35767],"23":[33,726],"24":[0,726],"25":[0,65868],"26":[41547,24321],"27":[2442,63393],"28":[12210,14652],"29":[26862,12210],"30":[12210,12210],"31":[2442,9768],"32":[0,14652],"33":[14652,0],"34":[0,0],"35":[1364,930],"36":[1364,1255593],"37":[1256957,83328],"38":[13640,1241953],"39":[1364,2941776],"40":[2943140,1364],"41":[13640,2928136],"42":[1364,30008],"43":[0,30008],"44":[0,1364],"45":[1364,1364],"46":[11284,12648],"47":[11284,0],"48":[11284,0],"49":[56420,67704],"50":[124124,56420],"51":[56420,56420],"52":[0,67704],"53":[67704,0],"54":[0,0],"55":[11284,112840],"56":[124124,56420],"57":[11284,101556],"58":[112840,45136],"59":[11284,90272],"60":[101556,33852],"61":[11284,0],"62":[11284,78988],"63":[90272,22568],"64":[11284,31],"65":[11284,67704],"66":[78988,11284]},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/TraverseTable.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/TraverseTable.ts"],"names":[],"mappings":"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","sourcesContent":["import {parse, defaultTreeAdapter} from \"parse5\";\nimport {InsightDataset, InsightError} from \"./IInsightFacade\";\nimport Dataset from \"./Dataset\";\nimport Room from \"./Room\";\nimport * as http from \"http\";\n\nexport default class TraverseTable {\n\tprivate indexColumnNames: string[] = [\n\t\t\"views-field views-field-field-building-image\",\n\t\t\"views-field views-field-field-building-code\",\n\t\t\"views-field views-field-title\",\n\t\t\"views-field views-field-field-building-address\",\n\t\t\"views-field views-field-nothing\"\n\t];\n\n\tprivate buildingRoomColumnNames: string[] = [\n\t\t\"views-field views-field-field-room-number\",\n\t\t\"views-field views-field-field-room-capacity\",\n\t\t\"views-field views-field-field-room-furniture\",\n\t\t\"views-field views-field-field-room-type\",\n\t\t\"views-field views-field-nothing\"\n\t];\n\n\tprivate indexTableExist: boolean = false;\n\tprivate roomsTableExist: boolean = false;\n\tprivate count = 0;\n\tprivate getLink = \"http://cs310.students.cs.ubc.ca:11316/api/v1/project_team103/\";\n\tprivate buildingLinkedFromIndex: string[] = [];\n\tprivate actualCount = 0;\n\n\t// ================================================ index.htm ======================================================\n\tpublic handleIndexHTML(document: any) {\n\t\tlet table = this.handleTable(document, \"table\");\n\t\tconsole.log(this.indexTableExist);\n\t\tif (this.indexTableExist) {\n\t\t\tlet tbody = this.handleTBody(table, \"tbody\");\n\t\t\tthis.handleTr(tbody, \"tr\");\n\t\t} else {\n\t\t\tconsole.log(\"asdfasldfasldfa\");\n\t\t\tthrow new InsightError(\"No valid table inside index.htm\");\n\t\t}\n\t\treturn this.buildingLinkedFromIndex;\n\t}\n\n\tprivate handleTable (node: any, tag: string): any {\n\t\tfor (let i = 0; i < node.childNodes?.length; i++) {\n\t\t\tlet child = node.childNodes[i];\n\t\t\t// \"views-table cols-5 table\"\n\t\t\tif (child.nodeName === tag && child.attrs[0].value ===  \"views-table cols-5 table\") {\n\t\t\t\t// console.log(child);\n\t\t\t\tthis.indexTableExist = true;\n\t\t\t\t// console.log(\"------------------------\" + child.nodeName + \"------------------------------\")\n\t\t\t\t// console.log(child.attrs[0].value);\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tconst result = this.handleTable(node.childNodes[i], tag);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate handleTBody (node: any, tag: string): any {\n\t\tfor (let i = 0; i < node.childNodes?.length; i++) {\n\t\t\tlet child = node.childNodes[i];\n\t\t\t// \"views-table cols-5 table\"\n\t\t\tif (child.nodeName === tag) {  // error in second case\n\t\t\t\t// console.log(child);\n\t\t\t\t// console.log(\"------------------------\" + child.nodeName + \"------------------------------\")\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tconst result = this.handleTBody(node.childNodes[i], tag);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate handleTr (node: any, tag: string): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (!node.childNodes) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const tr of node.childNodes) {\n\t\t\t// let child = node.childNodes[i];\n\t\t\tif (tr.nodeName === tag) {\n\t\t\t\tlet hasAllElement = true;\n\t\t\t\tlet currentBuildingLink;\n\t\t\t\t// console.log(\"------------------------\" + child.nodeName + \"------------------------------\")\n\t\t\t\tfor (const td of tr.childNodes) {\n\t\t\t\t\t// let td = tr.childNodes[j];\n\t\t\t\t\tif (td.nodeName === \"td\" && this.indexColumnNames.includes(td.attrs[0].value)) {\n\t\t\t\t\t\t// console.log(\"======\" + childOfTr.nodeName + \"======\")\n\t\t\t\t\t\t// console.log(childOfTr.attrs[0].value);\n\n\t\t\t\t\t\t// if (childOfTr.attrs[0].value === \"views-field views-field-nothing\") {\n\t\t\t\t\t\t// \tconsole.log(\"path = \" + childOfTr.childNodes[1].attrs[0].value);\n\t\t\t\t\t\t// \tthis.buildingLinkedFromIndex.push(childOfTr.childNodes[1].attrs[0].value);\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\thasAllElement = hasAllElement && true;\n\n\t\t\t\t\t\tif (td.attrs[0].value === \"views-field views-field-nothing\") {\n\t\t\t\t\t\t\t// console.log(td.childNodes[1].attrs[0].value.substring(2));\n\t\t\t\t\t\t\tthis.buildingLinkedFromIndex.push(td.childNodes[1].attrs[0].value.substring(2));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (td.nodeName === \"td\" && !this.indexColumnNames.includes(td.attrs[0].value)) {\n\t\t\t\t\t\t// throw new InsightError(\"Invalid td in index.htm table\");\n\t\t\t\t\t\thasAllElement = hasAllElement && false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if (hasAllElement) {\n\t\t\t\t// \tvar buildingCode;\n\t\t\t\t// \tvar buildingName;\n\t\t\t\t// \tvar buildingAddress;\n\t\t\t\t// \tvar buildingLink;\n\t\t\t\t// \tfor (let j = 0; j < child.childNodes.length; j++) {\n\t\t\t\t// \t\tlet td = child.childNodes[j];\n\t\t\t\t// \t\tif (td.attrs[0].value === \"views-field views-field-field-building-code\") {\n\t\t\t\t// \t\t\ttd.childNodes\n\t\t\t\t// \t\t} else if (td.attrs[0].value === \"views-field views-field-title\") {\n\t\t\t\t//\n\t\t\t\t// \t\t} else if (td.attrs[0].value === \"views-field views-field-field-building-address\") {\n\t\t\t\t//\n\t\t\t\t// \t\t} else if (td.attrs[0].value === \"views-field views-field-nothing\") {\n\t\t\t\t//\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t//\n\t\t\t\t// }\n\t\t\t}\n\t\t\tthis.handleTr(tr, tag);\n\t\t}\n\t\treturn;\n\t}\n\t// ================================================ index.htm ======================================================\n\n\n\t// ================================================ buildings ======================================================\n\tpublic async handleBuildingFile(document: any, dataset: Dataset) {\n\t\t// console.log(\"handle building reached\");\n\t\tlet table = this.handleBuildingTable(document, \"table\");\n\t\tif (this.roomsTableExist) {\n\t\t\tlet buildingInfo: BuildingInfo;\n\t\t\tbuildingInfo = this.getBuildingInfo(document, \"building-info\");\n\t\t\tlet tbody = this.handleBuildingTBody(table, \"tbody\");\n\t\t\tawait this.handleBuildingTr(tbody, \"tr\", buildingInfo, dataset);\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate getBuildingInfo(node: any, value: string): any {\n\t\tfor (let i = 0; i < node.childNodes?.length; i++) {\n\t\t\tlet child = node.childNodes[i];\n\t\t\tif (child.nodeName === \"div\" && child.attrs[0].value === \"building-info\") {\n\t\t\t\t// console.log (\"ASLKDJFALSKDFJHALSKJDFHLASJKDFNLAJKSVLAKSJDBVNLASKJDFLASKJDFHLASKJBLVKJSDBNVLAKJNFLKJASDFNLKJ\");\n\t\t\t\tlet fullName = child.childNodes[1].childNodes[0].childNodes[0].value;\n\t\t\t\tlet address = child.childNodes[3].childNodes[0].childNodes[0].value;\n\t\t\t\t// console.log(fullName);\t\t// FULL NAME GOT\n\t\t\t\t// console.log(address);\t\t// ADDRESS GOT\n\t\t\t\tlet buildingInfo: BuildingInfo = {name: fullName, address: address};\n\t\t\t\t// might have to create a dictionary to get the short name from the full namem\n\t\t\t\treturn buildingInfo;\n\t\t\t}\n\t\t\tconst result = this.getBuildingInfo(node.childNodes[i], value);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate handleBuildingTable (node: any, tag: string): any {\n\t\tfor (let i = 0; i < node.childNodes?.length; i++) {\n\t\t\tlet child = node.childNodes[i];\n\t\t\t// \"views-table cols-5 table\"\n\t\t\tif (child.nodeName === tag && child.attrs[0].value ===  \"views-table cols-5 table\") {\n\t\t\t\t// console.log(child);\n\t\t\t\tthis.roomsTableExist = true;\n\t\t\t\t// console.log(\"------------------------\" + child.nodeName + \"------------------------------\")\n\t\t\t\t// console.log(child.attrs[0].value);\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tconst result = this.handleBuildingTable(node.childNodes[i], tag);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate handleBuildingTBody (node: any, tag: string): any {\n\t\tfor (let i = 0; i < node.childNodes?.length; i++) {\n\t\t\tlet child = node.childNodes[i];\n\t\t\t// \"views-table cols-5 table\"\n\t\t\tif (child.nodeName === tag) {  // error in second case\n\t\t\t\t// console.log(child);\n\t\t\t\t// console.log(\"------------------------\" + child.nodeName + \"------------------------------\");\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tconst result = this.handleBuildingTBody(node.childNodes[i], tag);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t// private async handleBuildingTr (node: any, tag: string, buildingInfo: BuildingInfo, dataset: Dataset): Promise<void> {\n\t// \tconst promises: unknown[] = [];\n\t// \tif (!node) return;\n\t// \tif (!node.childNodes) return;\n\t//\n\t// \tfor (let i = 0; i < node.childNodes.length; i++) {\n\t// \t\tlet tr = node.childNodes[i];\n\t// \t\tif (tr.nodeName === tag) {\n\t// \t\t\tconsole.log(\"------------------------\" + tr.nodeName + \"------------------------------\")\n\t// \t\t\tlet hasAllElement = true;\n\t// \t\t\tfor (let j = 0; j < tr.childNodes.length; j++) {\n\t// \t\t\t\tlet td = tr.childNodes[j];\n\t// \t\t\t\tif (td.nodeName === \"td\" && this.buildingRoomColumnNames.includes(td.attrs[0].value)) {\n\t// \t\t\t\t\thasAllElement = hasAllElement && true;\n\t// \t\t\t\t\tconsole.log(\"======\" + td.nodeName + \"======\")\n\t// \t\t\t\t\t// console.log(childOfTr.attrs[0].value);\n\t// \t\t\t\t} else if (td.nodeName === \"td\" && !this.buildingRoomColumnNames.includes(td.attrs[0].value)) {\n\t// \t\t\t\t\t// throw new InsightError(\"Invalid td in building's rooms table\");\n\t// \t\t\t\t\t// HANDLE WHEN THE ROOM ONLY HAS 4/5 OF THE VALID FIELDS, etc\n\t// \t\t\t\t\thasAllElement = hasAllElement && false;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t\tif (hasAllElement) {\n\t// \t\t\t\tthis.count++;\n\t// \t\t\t\tconsole.log(this.count);\n\t// \t\t\t\t// console.log(node.parentNode.nodeName);\n\t// \t\t\t\tconsole.log(\"full building name = \" + buildingInfo.name);\n\t// \t\t\t\tconsole.log(\"building address = \" + buildingInfo.address);\n\t//\n\t// \t\t\t\tlet urlEncodedAddress: string = buildingInfo.address.replace(/ /g, \"%20\");\n\t// \t\t\t\tconsole.log(\"url encoded addy = \" + urlEncodedAddress);\n\t// \t\t\t\tlet urlForRoom = this.getLink + urlEncodedAddress;\n\t//\n\t// \t\t\t\tpromises.push(\n\t// \t\t\t\tawait fetch(urlForRoom)\n\t// \t\t\t\t\t.then((response) => response.json())\n\t// \t\t\t\t\t.then(async (json: any) => {\n\t// \t\t\t\t\t\tif (!json.error) {\n\t// \t\t\t\t\t\t\t// console.log(\"THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR \")\n\t// \t\t\t\t\t\t\tconsole.log(json)\n\t// \t\t\t\t\t\t\tvar buildingFullName = buildingInfo.name;\n\t// \t\t\t\t\t\t\tvar buildingShortName;\n\t// \t\t\t\t\t\t\tvar roomNumber;\n\t// \t\t\t\t\t\t\tvar roomName;\n\t// \t\t\t\t\t\t\tvar buildingAddress = buildingInfo.address;\n\t// \t\t\t\t\t\t\tvar lat = json.lat;\n\t// \t\t\t\t\t\t\tvar lon = json.lon;\n\t// \t\t\t\t\t\t\tvar roomCapacity;\n\t// \t\t\t\t\t\t\tvar roomType;\n\t// \t\t\t\t\t\t\tvar roomFurniture;\n\t// \t\t\t\t\t\t\tvar roomLink;\n\t//\n\t// \t\t\t\t\t\t\tfor (let j = 0; j < tr.childNodes.length; j++) {\n\t// \t\t\t\t\t\t\t\tlet td = tr.childNodes[j];\n\t//\n\t// \t\t\t\t\t\t\t\tif (td.nodeName === \"td\" && td.attrs[0].value === \"views-field views-field-field-room-number\") {\n\t// \t\t\t\t\t\t\t\t\troomNumber = td.childNodes[1].childNodes[0].value;\n\t// \t\t\t\t\t\t\t\t\tconsole.log(\"roomNumber = \" + roomNumber);\n\t// \t\t\t\t\t\t\t\t} else if (td.nodeName === \"td\" && td.attrs[0].value === \"views-field views-field-field-room-capacity\") {\n\t// \t\t\t\t\t\t\t\t\tvar temp = td.childNodes[0].value;\n\t// \t\t\t\t\t\t\t\t\troomCapacity = temp.replace(/\\D/g, '');\n\t// \t\t\t\t\t\t\t\t\tconsole.log(\"room capacity = \" + roomCapacity);\n\t// \t\t\t\t\t\t\t\t} else if (td.nodeName === \"td\" && td.attrs[0].value === \"views-field views-field-field-room-furniture\") {\n\t// \t\t\t\t\t\t\t\t\tvar temp = td.childNodes[0].value;\n\t// \t\t\t\t\t\t\t\t\troomFurniture = temp.trim().match(/\\S.*\\S/)?.[0] || '';\n\t// \t\t\t\t\t\t\t\t\tconsole.log(\"room furniture = \" + roomFurniture);\n\t// \t\t\t\t\t\t\t\t} else if (td.nodeName === \"td\" && td.attrs[0].value === \"views-field views-field-field-room-type\") {\n\t// \t\t\t\t\t\t\t\t\tvar temp = td.childNodes[0].value;\n\t// \t\t\t\t\t\t\t\t\troomType = temp.trim().match(/\\S.*\\S/)?.[0] || '';\n\t// \t\t\t\t\t\t\t\t\tconsole.log(\"room type = \" + roomType);\n\t// \t\t\t\t\t\t\t\t} else if (td.nodeName === \"td\" && td.attrs[0].value === \"views-field views-field-nothing\") {\n\t// \t\t\t\t\t\t\t\t\troomLink = td.childNodes[1].attrs[0].value;\n\t// \t\t\t\t\t\t\t\t\tconsole.log(\"link = \" + roomLink);\n\t// \t\t\t\t\t\t\t\t\tlet buildingRoom = roomLink.split(\"/\").pop();\n\t// \t\t\t\t\t\t\t\t\tbuildingShortName = buildingRoom.split(\"-\")[0];\n\t// \t\t\t\t\t\t\t\t\tconsole.log(\"building short name = \" + buildingShortName);\n\t// \t\t\t\t\t\t\t\t}\n\t// \t\t\t\t\t\t\t}\n\t//\n\t// \t\t\t\t\t\t\troomName = buildingShortName + \"_\" + roomNumber;\n\t// \t\t\t\t\t\t\tconsole.log(\"room name = \" + roomName);\n\t//\n\t// \t\t\t\t\t\t\tlet newRoom = this.createRoom (buildingFullName,\n\t// \t\t\t\t\t\t\t\tbuildingShortName,\n\t// \t\t\t\t\t\t\t\troomNumber,\n\t// \t\t\t\t\t\t\t\troomName,\n\t// \t\t\t\t\t\t\t\tbuildingAddress,\n\t// \t\t\t\t\t\t\t\tlat,\n\t// \t\t\t\t\t\t\t\tlon,\n\t// \t\t\t\t\t\t\t\troomCapacity,\n\t// \t\t\t\t\t\t\t\troomType,\n\t// \t\t\t\t\t\t\t\troomFurniture,\n\t// \t\t\t\t\t\t\t\troomLink);\n\t// \t\t\t\t\t\t\tdataset.setValidity(true);\n\t// \t\t\t\t\t\t\tdataset.addValidRoom(newRoom);\n\t//\n\t// \t\t\t\t\t\t} else {\n\t// \t\t\t\t\t\t\tconsole.log(\"THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR \")\n\t// \t\t\t\t\t\t\tconsole.log(\"ERROR IS THIS: \");\n\t// \t\t\t\t\t\t\tconsole.log(json)\n\t// \t\t\t\t\t\t}\n\t// \t\t\t\t\t\t// console.log(json)\n\t// \t\t\t\t\t})\n\t// \t\t\t\t\t.catch(error => {\n\t// \t\t\t\t\t\tconsole.error(\"Error fetching room data:\", error); // Log any fetch errors\n\t// \t\t\t\t\t})\n\t// \t\t\t\t);\n\t//\n\t//\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\tawait this.handleBuildingTr(tr, tag, buildingInfo, dataset);\n\t// \t}\n\t// \tawait Promise.all(promises);\n\t// \tconsole.log(\"valid rooms = \" + dataset.getValidRooms().length);\n\t// };\n\n\tprivate async handleBuildingTr(node: any,\n\t\ttag: string,\n\t\tbuildingInfo: BuildingInfo,\n\t\tdataset: Dataset) {\n\n\t\tconst promises: Array<Promise<void>> = [];\n\t\tif (!node || !node.childNodes) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const tr of node.childNodes) {\n\t\t\t// let tr = node.childNodes[i];\n\t\t\tif (tr.nodeName === tag) {\n\t\t\t\tlet hasAllElement = true;\n\t\t\t\thasAllElement = this.validateRoom(tr, hasAllElement);\n\t\t\t\tif (hasAllElement) {\n\t\t\t\t\tthis.count++;\n\t\t\t\t\tlet urlEncodedAddress: string = buildingInfo.address.replace(/ /g, \"%20\");\n\t\t\t\t\tlet urlForRoom = this.getLink + urlEncodedAddress;\n\t\t\t\t\t// console.log(urlForRoom);\n\n\t\t\t\t\tpromises.push(new Promise<void>((resolve, reject) => {\n\t\t\t\t\t\thttp.get(urlForRoom, (response) => {\n\t\t\t\t\t\t\tlet data = \"\";\n\t\t\t\t\t\t\tresponse.on(\"data\", (chunk) => {\n\t\t\t\t\t\t\t\tdata += chunk;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresponse.on(\"end\", () => {\n\t\t\t\t\t\t\t\tconst json = JSON.parse(data);\n\t\t\t\t\t\t\t\tif (!json.error) {\n\t\t\t\t\t\t\t\t\t// console.log(\"THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR THERE IS AN ERROR \")\n\t\t\t\t\t\t\t\t\t// console.log(json);\n\t\t\t\t\t\t\t\t\tthis.fetchRoomData(buildingInfo, json, tr, dataset);\n\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Error response:\", json);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}).on(\"error\", (error) => {\n\t\t\t\t\t\t\tconsole.error(\"Error fetching room data:\", error);\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t\t// await\n\t\t\t// this.handleBuildingTr(tr, tag, buildingInfo, dataset);\n\t\t}\n\t\tawait Promise.all(promises);\n\n\t\t// for (const tr of node.childNodes) {\n\t\t// \tawait this.handleBuildingTr(tr, tag, buildingInfo, dataset);\n\t\t// }\n\t}\n\n\tprivate validateRoom(tr: any, hasAllElement: boolean) {\n\t\tfor (const td of tr.childNodes) {\n\t\t\t// let td = tr.childNodes[j];\n\t\t\tif (td.nodeName === \"td\" && this.buildingRoomColumnNames.includes(td.attrs[0].value)) {\n\t\t\t\thasAllElement = hasAllElement && true;\n\t\t\t} else if (td.nodeName === \"td\" && !this.buildingRoomColumnNames.includes(td.attrs[0].value)) {\n\t\t\t\thasAllElement = hasAllElement && false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn hasAllElement;\n\t}\n\n\tprivate fetchRoomData(buildingInfo: BuildingInfo, json: any, tr: any, dataset: Dataset) {\n\t\tlet buildingFullName = buildingInfo.name;\n\t\tlet buildingShortName;\n\t\tlet roomNumber;\n\t\tlet roomName;\n\t\tlet buildingAddress = buildingInfo.address;\n\t\tlet lat = json.lat;\n\t\tlet lon = json.lon;\n\t\tlet roomCapacity;\n\t\tlet roomType;\n\t\tlet roomFurniture;\n\t\tlet roomLink;\n\n\t\tfor (const td of tr.childNodes) {\n\t\t\t// let td = tr.childNodes[j];\n\n\t\t\tif (td.nodeName === \"td\" &&\n\t\t\t\ttd.attrs[0].value === \"views-field views-field-field-room-number\") {\n\t\t\t\troomNumber = td.childNodes[1].childNodes[0].value;\n\t\t\t\t// console.log(\"roomNumber = \" + roomNumber);\n\t\t\t} else if (td.nodeName === \"td\" &&\n\t\t\t\ttd.attrs[0].value === \"views-field views-field-field-room-capacity\") {\n\t\t\t\tlet temp = td.childNodes[0].value;\n\t\t\t\troomCapacity = temp.replace(/\\D/g, \"\");\n\t\t\t\t// console.log(\"room capacity = \" + roomCapacity);\n\t\t\t} else if (td.nodeName === \"td\" &&\n\t\t\t\ttd.attrs[0].value === \"views-field views-field-field-room-furniture\") {\n\t\t\t\tlet temp = td.childNodes[0].value;\n\t\t\t\troomFurniture = temp.trim().match(/\\S.*\\S/)?.[0] || \"\";\n\t\t\t\t// console.log(\"room furniture = \" + roomFurniture);\n\t\t\t} else if (td.nodeName === \"td\" &&\n\t\t\t\ttd.attrs[0].value === \"views-field views-field-field-room-type\") {\n\t\t\t\tlet temp = td.childNodes[0].value;\n\t\t\t\troomType = temp.trim().match(/\\S.*\\S/)?.[0] || \"\";\n\t\t\t\t// console.log(\"room type = \" + roomType);\n\t\t\t} else if (td.nodeName === \"td\" &&\n\t\t\t\ttd.attrs[0].value === \"views-field views-field-nothing\") {\n\t\t\t\troomLink = td.childNodes[1].attrs[0].value;\n\t\t\t\t// console.log(\"link = \" + roomLink);\n\t\t\t\tlet buildingRoom = roomLink.split(\"/\").pop();\n\t\t\t\tbuildingShortName = buildingRoom.split(\"-\")[0];\n\t\t\t\t// console.log(\"building short name = \" + buildingShortName);\n\t\t\t}\n\t\t}\n\n\t\troomName = buildingShortName + \"_\" + roomNumber;\n\t\t// console.log(\"room name = \" + roomName);\n\n\t\tlet newRoom = this.createRoom(buildingFullName,\n\t\t\tbuildingShortName,\n\t\t\troomNumber,\n\t\t\troomName,\n\t\t\tbuildingAddress,\n\t\t\tlat,\n\t\t\tlon,\n\t\t\troomCapacity,\n\t\t\troomType,\n\t\t\troomFurniture,\n\t\t\troomLink);\n\t\tdataset.setValidity(true);\n\t\tdataset.addValidRoom(newRoom);\n\t}\n\n// ================================================ buildings ======================================================\n\n\tprivate createRoom (\n\t\tbuildingFullName: string,\n\t\tbuildingShortName: string,\n\t\troomNumber: string,\n\t\troomName: string,\n\t\tbuildingAddress: string,\n\t\tlat: string,\n\t\tlon: string,\n\t\troomCapacity: string,\n\t\troomType: string,\n\t\troomFurniture: string,\n\t\troomLink: string\n\t): Room {\n\t\treturn new Room (\n\t\t\tbuildingFullName,\n\t\t\tbuildingShortName,\n\t\t\troomNumber,\n\t\t\troomName,\n\t\t\tbuildingAddress,\n\t\t\tNumber(lat),\n\t\t\tNumber(lon),\n\t\t\tNumber(roomCapacity),\n\t\t\troomType,\n\t\t\troomFurniture,\n\t\t\troomLink\n\t\t);\n\t}\n}\n\nexport interface BuildingInfo {\n\tname: string;\n\taddress: string;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ecc88ee1b19c8791fb7ba85a3bacb5a8b8a98bba","contentHash":"0fc0a34366c42c8c757f626554d5aa41b6b85073a1b88ac6ed6e78b296d02bb6"},"/Users/frank/IdeaProjects/c0_team328/src/controller/Room.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/Room.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":35}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":29}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":27}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":35}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"13":{"start":{"line":32,"column":8},"end":{"line":32,"column":30}},"14":{"start":{"line":35,"column":8},"end":{"line":35,"column":27}},"15":{"start":{"line":38,"column":8},"end":{"line":38,"column":25}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":24}},"18":{"start":{"line":47,"column":8},"end":{"line":47,"column":24}},"19":{"start":{"line":50,"column":8},"end":{"line":50,"column":26}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":25}},"21":{"start":{"line":56,"column":8},"end":{"line":56,"column":30}},"22":{"start":{"line":59,"column":8},"end":{"line":59,"column":25}},"23":{"start":{"line":62,"column":0},"end":{"line":62,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":100},"end":{"line":27,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":30,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":19},"end":{"line":33,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":16},"end":{"line":36,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":14},"end":{"line":39,"column":5}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":17},"end":{"line":42,"column":5}},"line":40},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":13},"end":{"line":45,"column":5}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":13},"end":{"line":48,"column":5}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":15},"end":{"line":51,"column":5}},"line":49},"9":{"name":"(anonymous_9)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":14},"end":{"line":54,"column":5}},"line":52},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":19},"end":{"line":57,"column":5}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":14},"end":{"line":60,"column":5}},"line":58}},"branchMap":{},"s":{"0":1,"1":11284,"2":11284,"3":11284,"4":11284,"5":11284,"6":11284,"7":11284,"8":11284,"9":11284,"10":11284,"11":11284,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"f":{"0":11284,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/Room.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/Room.ts"],"names":[],"mappings":";;AAAA,MAAqB,IAAI;IACP,QAAQ,CAAS;IACjB,SAAS,CAAS;IAClB,MAAM,CAAS;IACf,IAAI,CAAS;IACb,OAAO,CAAS;IAEhB,GAAG,CAAS;IACZ,GAAG,CAAS;IACZ,KAAK,CAAS;IAEd,IAAI,CAAS;IACb,SAAS,CAAS;IAClB,IAAI,CAAS;IAE9B,YACC,QAAgB,EAChB,SAAiB,EACjB,MAAc,EACd,IAAY,EACZ,OAAe,EACf,GAAW,EACX,GAAW,EACX,KAAa,EACb,IAAY,EACZ,SAAiB,EACjB,IAAY;QAEZ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEM,SAAS;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;CAED;AArFD,uBAqFC","sourcesContent":["export default class Room {\n\tprivate readonly fullname: string;\n\tprivate readonly shortname: string;\n\tprivate readonly number: string;\n\tprivate readonly name: string;\n\tprivate readonly address: string;\n\n\tprivate readonly lat: number;\n\tprivate readonly lon: number;\n\tprivate readonly seats: number;\n\n\tprivate readonly type: string;\n\tprivate readonly furniture: string;\n\tprivate readonly href: string;\n\n\tconstructor (\n\t\tfullname: string,\n\t\tshortname: string,\n\t\tnumber: string,\n\t\tname: string,\n\t\taddress: string,\n\t\tlat: number,\n\t\tlon: number,\n\t\tseats: number,\n\t\ttype: string,\n\t\tfurniture: string,\n\t\thref: string\n\t) {\n\t\tthis.fullname = fullname;\n\t\tthis.shortname = shortname;\n\t\tthis.number = number;\n\t\tthis.name = name;\n\t\tthis.address = address;\n\t\tthis.lat = lat;\n\t\tthis.lon = lon;\n\t\tthis.seats = seats;\n\t\tthis.type = type;\n\t\tthis.furniture = furniture;\n\t\tthis.href = href;\n\t}\n\n\tpublic getFullName() {\n\t\treturn this.fullname;\n\t}\n\n\tpublic getShortName() {\n\t\treturn this.shortname;\n\t}\n\n\tpublic getNumber() {\n\t\treturn this.number;\n\t}\n\n\tpublic getName() {\n\t\treturn this.name;\n\t}\n\n\tpublic getAddress() {\n\t\treturn this.address;\n\t}\n\n\tpublic getLat() {\n\t\treturn this.lat;\n\t}\n\n\tpublic getLon() {\n\t\treturn this.lon;\n\t}\n\n\tpublic getSeats() {\n\t\treturn this.seats;\n\t}\n\n\tpublic getType() {\n\t\treturn this.type;\n\t}\n\n\tpublic getFurniture() {\n\t\treturn this.furniture;\n\t}\n\n\tpublic getHref() {\n\t\treturn this.href;\n\t}\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d227635edb9937c03788d9514410df2db7e4d8de","contentHash":"5e0213cc7963a4f5bc9d3995e8c048820964a52473f12f271d3fe6bd5e00b3ed"},"/Users/frank/IdeaProjects/c0_team328/src/controller/WhereOperator.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/WhereOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":41}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":43}},"4":{"start":{"line":11,"column":21},"end":{"line":11,"column":40}},"5":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":82}},"7":{"start":{"line":18,"column":8},"end":{"line":35,"column":9}},"8":{"start":{"line":20,"column":16},"end":{"line":20,"column":53}},"9":{"start":{"line":22,"column":16},"end":{"line":22,"column":51}},"10":{"start":{"line":24,"column":16},"end":{"line":24,"column":60}},"11":{"start":{"line":26,"column":16},"end":{"line":26,"column":66}},"12":{"start":{"line":28,"column":16},"end":{"line":28,"column":66}},"13":{"start":{"line":30,"column":16},"end":{"line":30,"column":66}},"14":{"start":{"line":32,"column":16},"end":{"line":32,"column":53}},"15":{"start":{"line":34,"column":16},"end":{"line":34,"column":78}},"16":{"start":{"line":39,"column":21},"end":{"line":39,"column":40}},"17":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"18":{"start":{"line":41,"column":12},"end":{"line":41,"column":76}},"19":{"start":{"line":43,"column":23},"end":{"line":43,"column":53}},"20":{"start":{"line":44,"column":8},"end":{"line":44,"column":39}},"21":{"start":{"line":44,"column":35},"end":{"line":44,"column":37}},"22":{"start":{"line":48,"column":24},"end":{"line":48,"column":43}},"23":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"24":{"start":{"line":50,"column":12},"end":{"line":50,"column":75}},"25":{"start":{"line":53,"column":25},"end":{"line":53,"column":94}},"26":{"start":{"line":53,"column":55},"end":{"line":53,"column":93}},"27":{"start":{"line":55,"column":24},"end":{"line":55,"column":51}},"28":{"start":{"line":58,"column":26},"end":{"line":58,"column":66}},"29":{"start":{"line":60,"column":8},"end":{"line":64,"column":11}},"30":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"31":{"start":{"line":61,"column":25},"end":{"line":61,"column":26}},"32":{"start":{"line":62,"column":16},"end":{"line":62,"column":64}},"33":{"start":{"line":65,"column":8},"end":{"line":65,"column":27}},"34":{"start":{"line":69,"column":24},"end":{"line":69,"column":43}},"35":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"36":{"start":{"line":71,"column":12},"end":{"line":71,"column":75}},"37":{"start":{"line":74,"column":25},"end":{"line":74,"column":94}},"38":{"start":{"line":74,"column":55},"end":{"line":74,"column":93}},"39":{"start":{"line":76,"column":24},"end":{"line":76,"column":51}},"40":{"start":{"line":79,"column":26},"end":{"line":79,"column":65}},"41":{"start":{"line":81,"column":8},"end":{"line":87,"column":11}},"42":{"start":{"line":82,"column":12},"end":{"line":86,"column":13}},"43":{"start":{"line":82,"column":25},"end":{"line":82,"column":26}},"44":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"45":{"start":{"line":84,"column":20},"end":{"line":84,"column":68}},"46":{"start":{"line":88,"column":8},"end":{"line":88,"column":27}},"47":{"start":{"line":93,"column":31},"end":{"line":93,"column":64}},"48":{"start":{"line":94,"column":23},"end":{"line":94,"column":40}},"49":{"start":{"line":95,"column":26},"end":{"line":95,"column":43}},"50":{"start":{"line":96,"column":27},"end":{"line":96,"column":29}},"51":{"start":{"line":97,"column":28},"end":{"line":97,"column":59}},"52":{"start":{"line":98,"column":8},"end":{"line":105,"column":11}},"53":{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},"54":{"start":{"line":100,"column":16},"end":{"line":100,"column":41}},"55":{"start":{"line":103,"column":16},"end":{"line":103,"column":40}},"56":{"start":{"line":106,"column":8},"end":{"line":106,"column":28}},"57":{"start":{"line":110,"column":35},"end":{"line":110,"column":63}},"58":{"start":{"line":111,"column":33},"end":{"line":111,"column":59}},"59":{"start":{"line":113,"column":29},"end":{"line":113,"column":65}},"60":{"start":{"line":114,"column":8},"end":{"line":129,"column":9}},"61":{"start":{"line":116,"column":12},"end":{"line":116,"column":48}},"62":{"start":{"line":118,"column":13},"end":{"line":129,"column":9}},"63":{"start":{"line":120,"column":12},"end":{"line":120,"column":48}},"64":{"start":{"line":122,"column":13},"end":{"line":129,"column":9}},"65":{"start":{"line":124,"column":12},"end":{"line":124,"column":50}},"66":{"start":{"line":128,"column":12},"end":{"line":128,"column":42}},"67":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"68":{"start":{"line":135,"column":12},"end":{"line":135,"column":73}},"69":{"start":{"line":137,"column":21},"end":{"line":139,"column":10}},"70":{"start":{"line":138,"column":12},"end":{"line":138,"column":72}},"71":{"start":{"line":140,"column":23},"end":{"line":140,"column":39}},"72":{"start":{"line":141,"column":8},"end":{"line":146,"column":9}},"73":{"start":{"line":142,"column":12},"end":{"line":142,"column":92}},"74":{"start":{"line":145,"column":12},"end":{"line":145,"column":89}},"75":{"start":{"line":147,"column":8},"end":{"line":147,"column":62}},"76":{"start":{"line":152,"column":21},"end":{"line":152,"column":42}},"77":{"start":{"line":153,"column":21},"end":{"line":153,"column":44}},"78":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"79":{"start":{"line":156,"column":12},"end":{"line":156,"column":76}},"80":{"start":{"line":159,"column":26},"end":{"line":159,"column":47}},"81":{"start":{"line":161,"column":8},"end":{"line":161,"column":34}},"82":{"start":{"line":162,"column":33},"end":{"line":162,"column":55}},"83":{"start":{"line":163,"column":20},"end":{"line":163,"column":42}},"84":{"start":{"line":164,"column":22},"end":{"line":164,"column":36}},"85":{"start":{"line":165,"column":8},"end":{"line":170,"column":9}},"86":{"start":{"line":166,"column":12},"end":{"line":166,"column":63}},"87":{"start":{"line":168,"column":13},"end":{"line":170,"column":9}},"88":{"start":{"line":169,"column":12},"end":{"line":169,"column":76}},"89":{"start":{"line":171,"column":8},"end":{"line":185,"column":9}},"90":{"start":{"line":172,"column":12},"end":{"line":174,"column":13}},"91":{"start":{"line":173,"column":16},"end":{"line":173,"column":79}},"92":{"start":{"line":175,"column":12},"end":{"line":175,"column":31}},"93":{"start":{"line":177,"column":13},"end":{"line":185,"column":9}},"94":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"95":{"start":{"line":179,"column":16},"end":{"line":179,"column":79}},"96":{"start":{"line":181,"column":12},"end":{"line":181,"column":31}},"97":{"start":{"line":184,"column":12},"end":{"line":184,"column":76}},"98":{"start":{"line":190,"column":31},"end":{"line":190,"column":64}},"99":{"start":{"line":191,"column":23},"end":{"line":191,"column":40}},"100":{"start":{"line":192,"column":26},"end":{"line":192,"column":43}},"101":{"start":{"line":193,"column":20},"end":{"line":193,"column":26}},"102":{"start":{"line":194,"column":27},"end":{"line":194,"column":29}},"103":{"start":{"line":195,"column":28},"end":{"line":195,"column":59}},"104":{"start":{"line":197,"column":8},"end":{"line":228,"column":9}},"105":{"start":{"line":199,"column":16},"end":{"line":206,"column":19}},"106":{"start":{"line":200,"column":20},"end":{"line":205,"column":21}},"107":{"start":{"line":201,"column":24},"end":{"line":201,"column":49}},"108":{"start":{"line":204,"column":24},"end":{"line":204,"column":48}},"109":{"start":{"line":207,"column":16},"end":{"line":207,"column":22}},"110":{"start":{"line":209,"column":16},"end":{"line":216,"column":19}},"111":{"start":{"line":210,"column":20},"end":{"line":215,"column":21}},"112":{"start":{"line":211,"column":24},"end":{"line":211,"column":49}},"113":{"start":{"line":214,"column":24},"end":{"line":214,"column":48}},"114":{"start":{"line":217,"column":16},"end":{"line":217,"column":22}},"115":{"start":{"line":219,"column":16},"end":{"line":226,"column":19}},"116":{"start":{"line":220,"column":20},"end":{"line":225,"column":21}},"117":{"start":{"line":221,"column":24},"end":{"line":221,"column":49}},"118":{"start":{"line":224,"column":24},"end":{"line":224,"column":48}},"119":{"start":{"line":227,"column":16},"end":{"line":227,"column":22}},"120":{"start":{"line":230,"column":8},"end":{"line":230,"column":28}},"121":{"start":{"line":233,"column":0},"end":{"line":233,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":31},"end":{"line":9,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":30},"end":{"line":36,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":28},"end":{"line":45,"column":5}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":28},"end":{"line":44,"column":29}},"loc":{"start":{"line":44,"column":35},"end":{"line":44,"column":37}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":27},"end":{"line":66,"column":5}},"line":47},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":37},"end":{"line":53,"column":38}},"loc":{"start":{"line":53,"column":55},"end":{"line":53,"column":93}},"line":53},"6":{"name":"(anonymous_6)","decl":{"start":{"line":60,"column":24},"end":{"line":60,"column":25}},"loc":{"start":{"line":60,"column":39},"end":{"line":64,"column":9}},"line":60},"7":{"name":"(anonymous_7)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":28},"end":{"line":89,"column":5}},"line":68},"8":{"name":"(anonymous_8)","decl":{"start":{"line":74,"column":37},"end":{"line":74,"column":38}},"loc":{"start":{"line":74,"column":55},"end":{"line":74,"column":93}},"line":74},"9":{"name":"(anonymous_9)","decl":{"start":{"line":81,"column":24},"end":{"line":81,"column":25}},"loc":{"start":{"line":81,"column":39},"end":{"line":87,"column":9}},"line":81},"10":{"name":"(anonymous_10)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":36},"end":{"line":107,"column":5}},"line":92},"11":{"name":"(anonymous_11)","decl":{"start":{"line":98,"column":30},"end":{"line":98,"column":31}},"loc":{"start":{"line":98,"column":44},"end":{"line":105,"column":9}},"line":98},"12":{"name":"(anonymous_12)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":45},"end":{"line":130,"column":5}},"line":108},"13":{"name":"(anonymous_13)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":42},"end":{"line":148,"column":5}},"line":133},"14":{"name":"(anonymous_14)","decl":{"start":{"line":137,"column":101},"end":{"line":137,"column":102}},"loc":{"start":{"line":137,"column":107},"end":{"line":139,"column":9}},"line":137},"15":{"name":"(anonymous_15)","decl":{"start":{"line":151,"column":4},"end":{"line":151,"column":5}},"loc":{"start":{"line":151,"column":35},"end":{"line":186,"column":5}},"line":151},"16":{"name":"(anonymous_16)","decl":{"start":{"line":189,"column":4},"end":{"line":189,"column":5}},"loc":{"start":{"line":189,"column":48},"end":{"line":231,"column":5}},"line":189},"17":{"name":"(anonymous_17)","decl":{"start":{"line":199,"column":38},"end":{"line":199,"column":39}},"loc":{"start":{"line":199,"column":52},"end":{"line":206,"column":17}},"line":199},"18":{"name":"(anonymous_18)","decl":{"start":{"line":209,"column":38},"end":{"line":209,"column":39}},"loc":{"start":{"line":209,"column":52},"end":{"line":216,"column":17}},"line":209},"19":{"name":"(anonymous_19)","decl":{"start":{"line":219,"column":38},"end":{"line":219,"column":39}},"loc":{"start":{"line":219,"column":52},"end":{"line":226,"column":17}},"line":219}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"1":{"loc":{"start":{"line":18,"column":8},"end":{"line":35,"column":9}},"type":"switch","locations":[{"start":{"line":19,"column":12},"end":{"line":20,"column":53}},{"start":{"line":21,"column":12},"end":{"line":22,"column":51}},{"start":{"line":23,"column":12},"end":{"line":24,"column":60}},{"start":{"line":25,"column":12},"end":{"line":26,"column":66}},{"start":{"line":27,"column":12},"end":{"line":28,"column":66}},{"start":{"line":29,"column":12},"end":{"line":30,"column":66}},{"start":{"line":31,"column":12},"end":{"line":32,"column":53}},{"start":{"line":33,"column":12},"end":{"line":34,"column":78}}],"line":18},"2":{"loc":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},{"start":{"line":40,"column":8},"end":{"line":42,"column":9}}],"line":40},"3":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{"line":49,"column":8},"end":{"line":51,"column":9}}],"line":49},"4":{"loc":{"start":{"line":62,"column":33},"end":{"line":62,"column":63}},"type":"binary-expr","locations":[{"start":{"line":62,"column":33},"end":{"line":62,"column":47}},{"start":{"line":62,"column":51},"end":{"line":62,"column":63}}],"line":62},"5":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70},"6":{"loc":{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":85,"column":17}},{"start":{"line":83,"column":16},"end":{"line":85,"column":17}}],"line":83},"7":{"loc":{"start":{"line":84,"column":37},"end":{"line":84,"column":67}},"type":"binary-expr","locations":[{"start":{"line":84,"column":37},"end":{"line":84,"column":51}},{"start":{"line":84,"column":55},"end":{"line":84,"column":67}}],"line":84},"8":{"loc":{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},{"start":{"line":99,"column":12},"end":{"line":104,"column":13}}],"line":99},"9":{"loc":{"start":{"line":114,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":129,"column":9}},{"start":{"line":114,"column":8},"end":{"line":129,"column":9}}],"line":114},"10":{"loc":{"start":{"line":114,"column":12},"end":{"line":114,"column":50}},"type":"binary-expr","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":30}},{"start":{"line":114,"column":34},"end":{"line":114,"column":50}}],"line":114},"11":{"loc":{"start":{"line":118,"column":13},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":13},"end":{"line":129,"column":9}},{"start":{"line":118,"column":13},"end":{"line":129,"column":9}}],"line":118},"12":{"loc":{"start":{"line":122,"column":13},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":13},"end":{"line":129,"column":9}},{"start":{"line":122,"column":13},"end":{"line":129,"column":9}}],"line":122},"13":{"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},{"start":{"line":134,"column":8},"end":{"line":136,"column":9}}],"line":134},"14":{"loc":{"start":{"line":141,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":146,"column":9}},{"start":{"line":141,"column":8},"end":{"line":146,"column":9}}],"line":141},"15":{"loc":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},{"start":{"line":155,"column":8},"end":{"line":157,"column":9}}],"line":155},"16":{"loc":{"start":{"line":165,"column":8},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":170,"column":9}},{"start":{"line":165,"column":8},"end":{"line":170,"column":9}}],"line":165},"17":{"loc":{"start":{"line":168,"column":13},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":13},"end":{"line":170,"column":9}},{"start":{"line":168,"column":13},"end":{"line":170,"column":9}}],"line":168},"18":{"loc":{"start":{"line":171,"column":8},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":185,"column":9}},{"start":{"line":171,"column":8},"end":{"line":185,"column":9}}],"line":171},"19":{"loc":{"start":{"line":172,"column":12},"end":{"line":174,"column":13}},"type":"if","locations":[{"start":{"line":172,"column":12},"end":{"line":174,"column":13}},{"start":{"line":172,"column":12},"end":{"line":174,"column":13}}],"line":172},"20":{"loc":{"start":{"line":177,"column":13},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":13},"end":{"line":185,"column":9}},{"start":{"line":177,"column":13},"end":{"line":185,"column":9}}],"line":177},"21":{"loc":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},{"start":{"line":178,"column":12},"end":{"line":180,"column":13}}],"line":178},"22":{"loc":{"start":{"line":197,"column":8},"end":{"line":228,"column":9}},"type":"switch","locations":[{"start":{"line":198,"column":12},"end":{"line":207,"column":22}},{"start":{"line":208,"column":12},"end":{"line":217,"column":22}},{"start":{"line":218,"column":12},"end":{"line":227,"column":22}}],"line":197},"23":{"loc":{"start":{"line":200,"column":20},"end":{"line":205,"column":21}},"type":"if","locations":[{"start":{"line":200,"column":20},"end":{"line":205,"column":21}},{"start":{"line":200,"column":20},"end":{"line":205,"column":21}}],"line":200},"24":{"loc":{"start":{"line":210,"column":20},"end":{"line":215,"column":21}},"type":"if","locations":[{"start":{"line":210,"column":20},"end":{"line":215,"column":21}},{"start":{"line":210,"column":20},"end":{"line":215,"column":21}}],"line":210},"25":{"loc":{"start":{"line":220,"column":20},"end":{"line":225,"column":21}},"type":"if","locations":[{"start":{"line":220,"column":20},"end":{"line":225,"column":21}},{"start":{"line":220,"column":20},"end":{"line":225,"column":21}}],"line":220}},"s":{"0":1,"1":1,"2":1,"3":72,"4":111,"5":111,"6":3,"7":108,"8":25,"9":5,"10":15,"11":25,"12":25,"13":3,"14":2,"15":8,"16":2,"17":2,"18":1,"19":1,"20":1,"21":64612,"22":5,"23":5,"24":1,"25":4,"26":6,"27":4,"28":1,"29":1,"30":2,"31":2,"32":129224,"33":1,"34":25,"35":25,"36":1,"37":24,"38":44,"39":24,"40":9,"41":9,"42":18,"43":18,"44":1163016,"45":596548,"46":9,"47":15,"48":7,"49":7,"50":7,"51":7,"52":7,"53":452284,"54":451729,"55":555,"56":7,"57":452284,"58":452284,"59":452284,"60":452284,"61":0,"62":452284,"63":0,"64":452284,"65":129224,"66":323060,"67":62,"68":12,"69":50,"70":0,"71":50,"72":50,"73":50,"74":0,"75":50,"76":68,"77":68,"78":68,"79":6,"80":62,"81":62,"82":62,"83":62,"84":62,"85":62,"86":62,"87":0,"88":0,"89":50,"90":40,"91":2,"92":38,"93":10,"94":8,"95":1,"96":7,"97":2,"98":53,"99":38,"100":38,"101":38,"102":38,"103":38,"104":38,"105":18,"106":1163016,"107":1162658,"108":358,"109":18,"110":1,"111":64612,"112":64573,"113":39,"114":1,"115":19,"116":1227628,"117":1127610,"118":100018,"119":19,"120":38,"121":1},"f":{"0":72,"1":111,"2":2,"3":64612,"4":5,"5":6,"6":2,"7":25,"8":44,"9":18,"10":15,"11":452284,"12":452284,"13":62,"14":0,"15":68,"16":53,"17":1163016,"18":64612,"19":1227628},"b":{"0":[3,108],"1":[25,5,15,25,25,3,2,8],"2":[1,1],"3":[1,4],"4":[129224,124225],"5":[1,24],"6":[596548,566468],"7":[596548,596548],"8":[451729,555],"9":[0,452284],"10":[452284,0],"11":[0,452284],"12":[129224,323060],"13":[12,50],"14":[50,0],"15":[6,62],"16":[62,0],"17":[0,0],"18":[40,10],"19":[2,38],"20":[8,2],"21":[1,7],"22":[18,1,19],"23":[1162658,358],"24":[64573,39],"25":[1127610,100018]},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/WhereOperator.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/WhereOperator.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError, InsightResult} from \"./IInsightFacade\";\nimport QueryOperator from \"./QueryOperator\";\n\nconst fsPromises = require(\"fs\").promises;\n\nexport default class WhereOperator {\n\n\tprivate queryOperator: QueryOperator;\n\tconstructor(queryOperator: QueryOperator) {\n\t\tthis.queryOperator = queryOperator;\n\t}\n\n\tpublic async handleWhere(queryS: any): Promise<boolean[]> {\n\n\t\tconst keys = Object.keys(queryS);\n\n\t\tif (keys.length > 1) {\n\t\t\tthrow new InsightError(\"More than one key in WHERE\");\n\t\t}\n\n        // Terminating calls are IS, EQ, GT, LT\n        // AND, OR, NOT have to be recursive\n        // TODO: query key parser;\n\t\tswitch (keys[0]) {\n\t\t\tcase \"AND\":\n\t\t\t\treturn this.handleAnd(queryS[\"AND\"]);\n\t\t\tcase \"OR\":\n\t\t\t\treturn this.handleOr(queryS[\"OR\"]);\n\t\t\tcase \"IS\":\n\t\t\t\treturn this.handleSComparison(queryS[\"IS\"]);\n\t\t\tcase \"EQ\":\n\t\t\t\treturn this.handleMComparison(queryS[\"EQ\"], \"EQ\");\n\t\t\tcase \"GT\":\n\t\t\t\treturn this.handleMComparison(queryS[\"GT\"], \"GT\");\n\t\t\tcase \"LT\":\n\t\t\t\treturn this.handleMComparison(queryS[\"LT\"], \"LT\");\n\t\t\tcase \"NOT\":\n\t\t\t\treturn this.handleNot(queryS[\"NOT\"]);\n\t\t\tdefault:\n\t\t\t\tthrow new InsightError(\"Invalid filter key\");\n\t\t}\n\t}\n\n    // All sections in the dataset outside of the given conditions\n\tprivate async handleNot(queryS: any): Promise<boolean[]> {\n\t\tconst keys = Object.keys(queryS);\n\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(\"Wrong number of keys\");\n\t\t}\n\n\t\tlet toDelete: boolean[] = await this.handleWhere(queryS);\n\n\t\treturn toDelete.map((x) => !x);\n\t}\n\n    // Takes two insight result arrays and joins the two together\n\tprivate async handleOr(queryS: any): Promise<boolean[]> {\n\t\tconst filters = Object.keys(queryS);\n\n\t\tif (filters.length === 0) {\n\t\t\tthrow new InsightError(\"No keys found in OR\");\n\t\t}\n\n        // Map each filter to a promise returned by handleWhere\n\t\tconst promises =  filters.map(async (filter) => await this.handleWhere(queryS[filter]));\n\n        // Use Promise.all to wait for all promises to resolve\n\t\tconst results = await Promise.all(promises);\n\n        // Assuming all results are boolean arrays of the same length.\n        // Initialize resultArray with false for each element.\n\t\tlet resultArray = new Array(results[0].length).fill(false);\n\n        // Combine the results using logical OR\n\t\tresults.forEach((newResult) => {\n\t\t\tfor (let i = 0; i < resultArray.length; i++) {\n\t\t\t\tresultArray[i] = resultArray[i] || newResult[i];\n\t\t\t}\n\t\t});\n\n\t\treturn resultArray;\n\t}\n\n    // Takes two insight result arrays and only joins the same sections together\n\tprivate async handleAnd(queryS: any): Promise<boolean[]> {\n\t\tconst filters = Object.keys(queryS);\n\n\t\tif (filters.length === 0) {\n\t\t\tthrow new InsightError(\"No keys found in OR\");\n\t\t}\n\n        // Map each filter to a promise returned by handleWhere\n\t\tconst promises =  filters.map(async (filter) => await this.handleWhere(queryS[filter]));\n\n        // Use Promise.all to wait for all promises to resolve\n\t\tconst results = await Promise.all(promises);\n\n        // Assuming all results are boolean arrays of the same length.\n        // Initialize resultArray with false for each element.\n\t\tlet resultArray = new Array(results[0].length).fill(true);\n\n        // Combine the results using logical OR\n\t\tresults.forEach((newResult) => {\n\t\t\tfor (let i = 0; i < resultArray.length; i++) {\n\t\t\t\tif (resultArray[i]) {\n\t\t\t\t\tresultArray[i] = resultArray[i]  && newResult[i];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn resultArray;\n\t}\n\n    // If there is no InsightResult passed in, create an insight result based on the queryKey\n    // This insight result will have all the fields and sections of the requested dataset\n\tprivate async handleSComparison(queryS: any): Promise<boolean[]> {\n\n\t\tconst parsedQueryKey: any =  await this.queryKeyParser(queryS);\n\t\tconst sField: string = parsedQueryKey[1];\n\t\tconst toCompare: string = parsedQueryKey[2];\n\n\t\tlet booleanArray: boolean[] = [];\n\t\tlet insightsArray: InsightResult[] = this.queryOperator.getDataset();\n\n\t\tinsightsArray.forEach((_, index) => {\n\t\t\tif (!this.matchesQueryPattern(String(insightsArray[index][sField]), toCompare)) {\n\t\t\t\tbooleanArray.push(false);\n\t\t\t} else {\n\t\t\t\tbooleanArray.push(true);\n\t\t\t}\n\t\t});\n\n\t\treturn booleanArray;\n\t}\n\n\tprivate  matchesQueryPattern(input: string, queryPattern: string): boolean {\n        // Check if the pattern starts and/or ends with an asterisk\n\t\tconst startsWithAsterisk = queryPattern.startsWith(\"*\");\n\t\tconst endsWithAsterisk = queryPattern.endsWith(\"*\");\n\n        // Remove asterisks from the pattern for comparison\n\t\tconst cleanPattern = queryPattern.replace(/^\\*|\\*$/g, \"\");\n\n\t\tif (startsWithAsterisk && endsWithAsterisk) {\n            // Contains inputstring\n\t\t\treturn input.includes(cleanPattern);\n\t\t} else if (startsWithAsterisk) {\n            // Ends with inputstring\n\t\t\treturn input.endsWith(cleanPattern);\n\t\t} else if (endsWithAsterisk) {\n            // Starts with inputstring\n\t\t\treturn input.startsWith(cleanPattern);\n\t\t} else {\n            // Matches inputstring exactly\n\t\t\treturn input === cleanPattern;\n\t\t}\n\t}\n\n    // Checks if the given idString is a valid dataset name\n    // If it is, it returns an entire dataset in InsightResult form\n\tprivate async validateAndSetDataset(idString: string): Promise<void> {\n\n\t\tif (!this.queryOperator.getDatasetIds().includes(idString)) {\n\t\t\tthrow new InsightError(\"Dataset not found\");\n\t\t}\n\t\tconst data = await fsPromises.readFile(this.queryOperator.getDatasetDirPath(idString)).catch(() => {\n\t\t\tthrow new InsightError(\"Error file read.\");\n\t\t} );\n\n\t\tconst object = JSON.parse(data);\n\n\t\tif (object.kind === \"sections\") {\n\t\t\tthis.queryOperator.setDataset(JSON.parse(JSON.stringify(object.validSections)));\n\t\t} else {\n\t\t\tthis.queryOperator.setDataset(JSON.parse(JSON.stringify(object.validRooms)));\n\t\t}\n\t\tthis.queryOperator.setDatasetToQueryId(object.idName);\n\t}\n\n    // Takes a query key and returns a valid dataset id to search for and valid mfield and sfield.\n    // Throws Insight Error if not a valid query string.\n\tprivate async queryKeyParser(queryKey: any): Promise<any> {\n\t\tconst keys = Object.keys(queryKey);\n\t\tconst vals: any = Object.values(queryKey);\n\n        // Check if there are more than 1 key in\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(\"Wrong number of keys\");\n\t\t}\n\n        // Strores idstring and m or s field into parsedArray\n\t\tlet parsedArray: Array<number | string> = keys[0].split(\"_\", 2);\n\n        // Add the val\n\t\tparsedArray.push(vals[0]);\n\n\t\tconst datasetToQueryId: string = String(parsedArray[0]);\n\t\tconst key: string = String(parsedArray[1]);\n\t\tconst value: string | number = parsedArray[2];\n\n\t\tif (this.queryOperator.getQueryingDatasetId()  === \"\") {\n\t\t\tawait this.validateAndSetDataset(datasetToQueryId);\n\t\t} else if (this.queryOperator.getQueryingDatasetId() !== datasetToQueryId) {\n\t\t\tthrow new InsightError(\"Querying 2 Datasets.\");\n\t\t}\n\n\t\tif (this.queryOperator.mkey.includes(key)) {\n\t\t\tif (typeof value !== \"number\") {\n\t\t\t\tthrow new InsightError(\"Invalid mfield type\");\n\t\t\t}\n\t\t\treturn parsedArray;\n\t\t} else if (this.queryOperator.skey.includes(key)) {\n\t\t\tif (typeof value !== \"string\") {\n\t\t\t\tthrow new InsightError(\"Invalid sfield type\");\n\t\t\t}\n\t\t\treturn parsedArray;\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid skey or mkey\");\n\t\t}\n\n\t}\n\n    // If there is no InsightResult passed in, create an insight result based on the queryKey\n    // This insight result will have all the fields and sections of the requested dataset\n\tprivate async handleMComparison\n\t( queryS: any, comparator: string): Promise<boolean[]> {\n\n\t\tconst parsedQueryKey: any = await this.queryKeyParser(queryS);\n\t\tconst mField: string = parsedQueryKey[1];\n\t\tconst toCompare: number = parsedQueryKey[2];\n\t\tconst key: string = mField;\n\n\t\tlet booleanArray: boolean[] = [];\n\t\tlet insightsArray: InsightResult[] = this.queryOperator.getDataset();\n\n\n        // Apply condition and shorten InsightResult array\n\t\tswitch (comparator) {\n\t\t\tcase \"EQ\" :\n\t\t\t\tinsightsArray.forEach((_, index) => {\n\t\t\t\t\tif (Number(insightsArray[index][key]) !== toCompare) {\n\t\t\t\t\t\tbooleanArray.push(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbooleanArray.push(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase \"LT\" :\n\t\t\t\tinsightsArray.forEach((_, index) => {\n\t\t\t\t\tif (Number(insightsArray[index][key]) >= toCompare) {\n\t\t\t\t\t\tbooleanArray.push(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbooleanArray.push(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase \"GT\" :\n\t\t\t\tinsightsArray.forEach((_, index) => {\n\t\t\t\t\tif (Number(insightsArray[index][key]) <= toCompare) {\n\t\t\t\t\t\tbooleanArray.push(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbooleanArray.push(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\n        // Return InsightResult Array\n\t\treturn  booleanArray;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1f9dc1b9383be9d66ad86b7fe3ca9495bae73663","contentHash":"932422a3f8dd66974ccd92d9f0d6beb1e93e85102d65e54be080bbfac7e00a25"},"/Users/frank/IdeaProjects/c0_team328/src/controller/OptionsOperator.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/OptionsOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":7,"column":8},"end":{"line":7,"column":43}},"3":{"start":{"line":11,"column":19},"end":{"line":11,"column":38}},"4":{"start":{"line":13,"column":27},"end":{"line":13,"column":91}},"5":{"start":{"line":13,"column":46},"end":{"line":13,"column":90}},"6":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"7":{"start":{"line":15,"column":12},"end":{"line":15,"column":78}},"8":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":66}},"10":{"start":{"line":21,"column":24},"end":{"line":21,"column":57}},"11":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"12":{"start":{"line":23,"column":12},"end":{"line":23,"column":72}},"13":{"start":{"line":26,"column":29},"end":{"line":35,"column":10}},"14":{"start":{"line":27,"column":29},"end":{"line":27,"column":31}},"15":{"start":{"line":28,"column":12},"end":{"line":33,"column":15}},"16":{"start":{"line":30,"column":16},"end":{"line":32,"column":17}},"17":{"start":{"line":31,"column":20},"end":{"line":31,"column":55}},"18":{"start":{"line":34,"column":12},"end":{"line":34,"column":30}},"19":{"start":{"line":36,"column":8},"end":{"line":50,"column":9}},"20":{"start":{"line":37,"column":29},"end":{"line":37,"column":72}},"21":{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},"22":{"start":{"line":39,"column":16},"end":{"line":39,"column":95}},"23":{"start":{"line":41,"column":12},"end":{"line":49,"column":15}},"24":{"start":{"line":42,"column":16},"end":{"line":44,"column":17}},"25":{"start":{"line":43,"column":20},"end":{"line":43,"column":30}},"26":{"start":{"line":45,"column":16},"end":{"line":47,"column":17}},"27":{"start":{"line":46,"column":20},"end":{"line":46,"column":29}},"28":{"start":{"line":48,"column":16},"end":{"line":48,"column":25}},"29":{"start":{"line":51,"column":8},"end":{"line":51,"column":28}},"30":{"start":{"line":54,"column":28},"end":{"line":56,"column":10}},"31":{"start":{"line":55,"column":12},"end":{"line":55,"column":55}},"32":{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},"33":{"start":{"line":60,"column":0},"end":{"line":60,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":31},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":36},"end":{"line":52,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":37},"end":{"line":13,"column":38}},"loc":{"start":{"line":13,"column":46},"end":{"line":13,"column":90}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":42},"end":{"line":26,"column":43}},"loc":{"start":{"line":26,"column":55},"end":{"line":35,"column":9}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":28},"end":{"line":28,"column":29}},"loc":{"start":{"line":28,"column":39},"end":{"line":33,"column":13}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":41,"column":30},"end":{"line":41,"column":31}},"loc":{"start":{"line":41,"column":40},"end":{"line":49,"column":13}},"line":41},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":26},"end":{"line":58,"column":5}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":40},"end":{"line":54,"column":41}},"loc":{"start":{"line":54,"column":50},"end":{"line":56,"column":9}},"line":54}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"1":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17},"2":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"3":{"loc":{"start":{"line":30,"column":16},"end":{"line":32,"column":17}},"type":"if","locations":[{"start":{"line":30,"column":16},"end":{"line":32,"column":17}},{"start":{"line":30,"column":16},"end":{"line":32,"column":17}}],"line":30},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":50,"column":9}},{"start":{"line":36,"column":8},"end":{"line":50,"column":9}}],"line":36},"5":{"loc":{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},{"start":{"line":38,"column":12},"end":{"line":40,"column":13}}],"line":38},"6":{"loc":{"start":{"line":42,"column":16},"end":{"line":44,"column":17}},"type":"if","locations":[{"start":{"line":42,"column":16},"end":{"line":44,"column":17}},{"start":{"line":42,"column":16},"end":{"line":44,"column":17}}],"line":42},"7":{"loc":{"start":{"line":45,"column":16},"end":{"line":47,"column":17}},"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":47,"column":17}},{"start":{"line":45,"column":16},"end":{"line":47,"column":17}}],"line":45}},"s":{"0":1,"1":1,"2":72,"3":2,"4":2,"5":2,"6":2,"7":0,"8":2,"9":0,"10":2,"11":2,"12":0,"13":2,"14":9,"15":9,"16":20,"17":18,"18":9,"19":2,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":2,"30":2,"31":5,"32":2,"33":1},"f":{"0":72,"1":2,"2":2,"3":9,"4":20,"5":0,"6":2,"7":5},"b":{"0":[0,2],"1":[0,2],"2":[0,2],"3":[18,2],"4":[0,2],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/OptionsOperator.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/OptionsOperator.ts"],"names":[],"mappings":";;AAAA,qDAA6D;AAE7D,MAAqB,eAAe;IAC3B,aAAa,CAAgB;IACrC,YAAY,aAA4B;QACvC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACpC,CAAC;IAEM,aAAa,CAAC,MAAW,EAAE,QAA0B;QAErD,qCAAqC;QAC3C,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGzB,qEAAqE;QAC3E,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACpF,IAAI,UAAU,EAAE,CAAC;YAChB,MAAM,IAAI,6BAAY,CAAC,wBAAwB,CAAC,CAAC;QAClD,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;YAC/B,MAAM,IAAI,6BAAY,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC;QAEK,kBAAkB;QACxB,MAAM,OAAO,GAAa,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAE5D,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACxB,MAAM,IAAI,6BAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5C,CAAC;QAEK,iCAAiC;QACvC,MAAM,YAAY,GAAoB,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9D,IAAI,UAAU,GAAkB,EAAE,CAAC;YACnC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBACb,sDAAsD;gBAClE,IAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC;oBACzD,UAAU,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;gBACpC,CAAC;YACF,CAAC,CAAC,CAAC;YACH,OAAO,UAAU,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5B,MAAM,QAAQ,GAAW,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;gBACjC,MAAM,IAAI,6BAAY,CAAC,qCAAqC,CAAC,CAAC;YAC/D,CAAC;YACD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;oBAC/B,OAAO,CAAC,CAAC,CAAC;gBACX,CAAC;gBACD,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;oBAC/B,OAAO,CAAC,CAAC;gBACV,CAAC;gBACD,OAAO,CAAC,CAAC;YACV,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,OAAO,YAAY,CAAC;IACrB,CAAC;IAEO,YAAY,CAAC,OAAiB;QACrC,IAAI,aAAa,GAAa,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YAClD,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;IACtB,CAAC;CACD;AAlED,kCAkEC","sourcesContent":["import {InsightError, InsightResult} from \"./IInsightFacade\";\nimport QueryOperator from \"./QueryOperator\";\nexport default class OptionsOperator {\n\tprivate queryOperator: QueryOperator;\n\tconstructor(queryOperator: QueryOperator) {\n\t\tthis.queryOperator = queryOperator;\n\t}\n\n\tpublic handleOptions(queryS: any, filtered:  InsightResult[]): InsightResult[] {\n\n        // If columns not present throw error\n\t\tlet keys = Object.keys(queryS);\n\n\n        // Check if there is a key that does not match the valid options keys\n\t\tconst invalidKey = keys.some((key) => !this.queryOperator.optionsKey.includes(key));\n\t\tif (invalidKey) {\n\t\t\tthrow new InsightError(\"Invalid key in OPTIONS\");\n\t\t}\n\n\t\tif (!keys.includes(\"COLUMNS\")) {\n\t\t\tthrow new InsightError(\"No columns\");\n\t\t}\n\n        // Columns to keep\n\t\tconst columns: string[] = this.parseColumns(queryS.COLUMNS);\n\n\t\tif (columns.length < 1) {\n\t\t\tthrow new InsightError(\"Columns is empty\");\n\t\t}\n\n        // Filters for the needed columns\n\t\tconst updatedArray: InsightResult[] = filtered.map((insight) => {\n\t\t\tlet newInsight: InsightResult = {};\n\t\t\tcolumns.forEach((field) => {\n                // Object.prototype.hasOwnProperty.call(insight, field\n\t\t\t\tif(Object.prototype.hasOwnProperty.call(insight, field)) {\n\t\t\t\t\tnewInsight[field] = insight[field];\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn newInsight;\n\t\t});\n\n\t\tif (keys.includes(\"ORDER\")) {\n\t\t\tconst toSortBy: string = this.queryOperator.parseField(queryS.ORDER);\n\t\t\tif (!columns.includes(toSortBy)) {\n\t\t\t\tthrow new InsightError(\"Sort key is not present in columns.\");\n\t\t\t}\n\t\t\tupdatedArray.sort((a, b) => {\n\t\t\t\tif (a[toSortBy] < b[toSortBy]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (a[toSortBy] > b[toSortBy]) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\n\t\treturn updatedArray;\n\t}\n\n\tprivate parseColumns(columns: string[]) {\n\t\tlet parsedColumns: string[] = columns.map((item) => {\n\t\t\treturn this.queryOperator.parseField(item);\n\t\t});\n\t\treturn parsedColumns;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"83e8cef9d51d47679ff4adec7df16b5198c2a6f8","contentHash":"97bd9167a4f7f133fa3dfb35c17c725ce2ac5cc8a86dfd01add739b334f9208f"},"/Users/frank/IdeaProjects/c0_team328/src/controller/TransformOperator.ts":{"path":"/Users/frank/IdeaProjects/c0_team328/src/controller/TransformOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":6,"column":8},"end":{"line":6,"column":43}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":47}},"3":{"start":{"line":11,"column":22},"end":{"line":11,"column":53}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":36}},"5":{"start":{"line":14,"column":8},"end":{"line":26,"column":11}},"6":{"start":{"line":15,"column":12},"end":{"line":25,"column":15}},"7":{"start":{"line":16,"column":38},"end":{"line":16,"column":56}},"8":{"start":{"line":17,"column":34},"end":{"line":17,"column":50}},"9":{"start":{"line":18,"column":39},"end":{"line":18,"column":59}},"10":{"start":{"line":19,"column":34},"end":{"line":19,"column":51}},"11":{"start":{"line":21,"column":44},"end":{"line":21,"column":90}},"12":{"start":{"line":23,"column":16},"end":{"line":23,"column":63}},"13":{"start":{"line":24,"column":16},"end":{"line":24,"column":62}},"14":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"15":{"start":{"line":29,"column":8},"end":{"line":31,"column":11}},"16":{"start":{"line":30,"column":12},"end":{"line":30,"column":34}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},"18":{"start":{"line":35,"column":30},"end":{"line":35,"column":58}},"19":{"start":{"line":36,"column":32},"end":{"line":36,"column":62}},"20":{"start":{"line":37,"column":28},"end":{"line":37,"column":77}},"21":{"start":{"line":38,"column":8},"end":{"line":80,"column":9}},"22":{"start":{"line":40,"column":31},"end":{"line":40,"column":47}},"23":{"start":{"line":41,"column":16},"end":{"line":45,"column":17}},"24":{"start":{"line":41,"column":29},"end":{"line":41,"column":30}},"25":{"start":{"line":42,"column":20},"end":{"line":44,"column":21}},"26":{"start":{"line":43,"column":24},"end":{"line":43,"column":70}},"27":{"start":{"line":46,"column":16},"end":{"line":46,"column":32}},"28":{"start":{"line":49,"column":31},"end":{"line":49,"column":32}},"29":{"start":{"line":50,"column":16},"end":{"line":52,"column":17}},"30":{"start":{"line":50,"column":29},"end":{"line":50,"column":30}},"31":{"start":{"line":51,"column":20},"end":{"line":51,"column":67}},"32":{"start":{"line":53,"column":36},"end":{"line":53,"column":70}},"33":{"start":{"line":54,"column":16},"end":{"line":54,"column":34}},"34":{"start":{"line":57,"column":31},"end":{"line":57,"column":32}},"35":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"36":{"start":{"line":58,"column":29},"end":{"line":58,"column":30}},"37":{"start":{"line":59,"column":20},"end":{"line":59,"column":67}},"38":{"start":{"line":61,"column":16},"end":{"line":61,"column":32}},"39":{"start":{"line":64,"column":30},"end":{"line":64,"column":46}},"40":{"start":{"line":65,"column":16},"end":{"line":69,"column":17}},"41":{"start":{"line":65,"column":29},"end":{"line":65,"column":30}},"42":{"start":{"line":66,"column":20},"end":{"line":68,"column":21}},"43":{"start":{"line":67,"column":24},"end":{"line":67,"column":69}},"44":{"start":{"line":70,"column":16},"end":{"line":70,"column":31}},"45":{"start":{"line":73,"column":36},"end":{"line":73,"column":45}},"46":{"start":{"line":74,"column":16},"end":{"line":77,"column":17}},"47":{"start":{"line":74,"column":29},"end":{"line":74,"column":30}},"48":{"start":{"line":75,"column":41},"end":{"line":75,"column":89}},"49":{"start":{"line":76,"column":20},"end":{"line":76,"column":82}},"50":{"start":{"line":78,"column":16},"end":{"line":78,"column":40}},"51":{"start":{"line":81,"column":8},"end":{"line":81,"column":17}},"52":{"start":{"line":84,"column":26},"end":{"line":84,"column":37}},"53":{"start":{"line":85,"column":18},"end":{"line":85,"column":27}},"54":{"start":{"line":86,"column":25},"end":{"line":86,"column":27}},"55":{"start":{"line":88,"column":8},"end":{"line":102,"column":11}},"56":{"start":{"line":90,"column":27},"end":{"line":90,"column":29}},"57":{"start":{"line":91,"column":12},"end":{"line":95,"column":15}},"58":{"start":{"line":92,"column":36},"end":{"line":92,"column":74}},"59":{"start":{"line":93,"column":16},"end":{"line":93,"column":56}},"60":{"start":{"line":94,"column":16},"end":{"line":94,"column":63}},"61":{"start":{"line":96,"column":12},"end":{"line":96,"column":33}},"62":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"63":{"start":{"line":98,"column":16},"end":{"line":98,"column":48}},"64":{"start":{"line":100,"column":12},"end":{"line":100,"column":45}},"65":{"start":{"line":101,"column":12},"end":{"line":101,"column":28}},"66":{"start":{"line":103,"column":8},"end":{"line":103,"column":19}},"67":{"start":{"line":106,"column":8},"end":{"line":106,"column":15}},"68":{"start":{"line":109,"column":0},"end":{"line":109,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":31},"end":{"line":7,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":41},"end":{"line":33,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":24},"end":{"line":14,"column":25}},"loc":{"start":{"line":14,"column":40},"end":{"line":26,"column":9}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":31},"end":{"line":15,"column":32}},"loc":{"start":{"line":15,"column":56},"end":{"line":25,"column":13}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":24},"end":{"line":29,"column":25}},"loc":{"start":{"line":29,"column":45},"end":{"line":31,"column":9}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":52},"end":{"line":82,"column":5}},"line":34},"6":{"name":"(anonymous_6)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":31},"end":{"line":104,"column":5}},"line":83},"7":{"name":"(anonymous_7)","decl":{"start":{"line":88,"column":23},"end":{"line":88,"column":24}},"loc":{"start":{"line":88,"column":43},"end":{"line":102,"column":9}},"line":88},"8":{"name":"(anonymous_8)","decl":{"start":{"line":91,"column":32},"end":{"line":91,"column":33}},"loc":{"start":{"line":91,"column":45},"end":{"line":95,"column":13}},"line":91},"9":{"name":"(anonymous_9)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":38},"end":{"line":107,"column":5}},"line":105}},"branchMap":{"0":{"loc":{"start":{"line":38,"column":8},"end":{"line":80,"column":9}},"type":"switch","locations":[{"start":{"line":39,"column":12},"end":{"line":47,"column":13}},{"start":{"line":48,"column":12},"end":{"line":55,"column":13}},{"start":{"line":56,"column":12},"end":{"line":62,"column":13}},{"start":{"line":63,"column":12},"end":{"line":71,"column":13}},{"start":{"line":72,"column":12},"end":{"line":79,"column":13}}],"line":38},"1":{"loc":{"start":{"line":42,"column":20},"end":{"line":44,"column":21}},"type":"if","locations":[{"start":{"line":42,"column":20},"end":{"line":44,"column":21}},{"start":{"line":42,"column":20},"end":{"line":44,"column":21}}],"line":42},"2":{"loc":{"start":{"line":66,"column":20},"end":{"line":68,"column":21}},"type":"if","locations":[{"start":{"line":66,"column":20},"end":{"line":68,"column":21}},{"start":{"line":66,"column":20},"end":{"line":68,"column":21}}],"line":66},"3":{"loc":{"start":{"line":75,"column":41},"end":{"line":75,"column":89}},"type":"binary-expr","locations":[{"start":{"line":75,"column":41},"end":{"line":75,"column":84}},{"start":{"line":75,"column":88},"end":{"line":75,"column":89}}],"line":75},"4":{"loc":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},{"start":{"line":97,"column":12},"end":{"line":99,"column":13}}],"line":97}},"s":{"0":1,"1":72,"2":23,"3":23,"4":2,"5":2,"6":9,"7":9,"8":9,"9":9,"10":9,"11":9,"12":9,"13":9,"14":2,"15":2,"16":9,"17":2,"18":9,"19":9,"20":9,"21":9,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":2,"29":2,"30":2,"31":3,"32":2,"33":2,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":7,"46":7,"47":7,"48":27,"49":27,"50":7,"51":0,"52":23,"53":2,"54":2,"55":2,"56":30,"57":30,"58":30,"59":30,"60":30,"61":30,"62":30,"63":9,"64":30,"65":30,"66":2,"67":23,"68":1},"f":{"0":72,"1":23,"2":9,"3":9,"4":9,"5":9,"6":23,"7":30,"8":30,"9":23},"b":{"0":[0,2,0,0,7],"1":[0,0],"2":[0,0],"3":[27,8],"4":[9,21]},"inputSourceMap":{"version":3,"file":"/Users/frank/IdeaProjects/c0_team328/src/controller/TransformOperator.ts","sources":["/Users/frank/IdeaProjects/c0_team328/src/controller/TransformOperator.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError, InsightResult} from \"./IInsightFacade\";\nimport QueryOperator from \"./QueryOperator\";\nexport default class TransformOperator {\n\tprivate queryOperator: QueryOperator;\n\tconstructor(queryOperator: QueryOperator) {\n\t\tthis.queryOperator = queryOperator;\n\t}\n\n\tpublic handleTransformations(query: any, result: InsightResult[]): InsightResult[] {\n        // Check keys length and its names\n\t\tthis.validateTransformationKeys(query);\n\t\tlet grouped: Map<string, InsightResult[]>  = this.handleGroup(query, result);\n\n\t\tlet applyArray: string[] = query.APPLY;\n\n\n        // Take each group\n\t\tgrouped.forEach((groupArray: InsightResult[]) => {\n\t\t\tapplyArray.forEach((value, index, array) =>  {\n\t\t\t\tconst applyKeyArray: string[] =  Object.keys(value);\n\t\t\t\tconst applyName = applyKeyArray[0];\n\t\t\t\tconst applyRuleArray: string[] = Object.values(value);\n\t\t\t\tconst applyRule: string = applyRuleArray[0];\n\n\n                // Calculate apply rule\n\t\t\t\tconst calculatedApplyRule: number = this.calculateApplyRule(applyRule, groupArray);\n\n                // Add to the current groupArray with the right applyName\n\t\t\t\tgroupArray[0][applyName] = calculatedApplyRule;\n\t\t\t\tthis.queryOperator.applyNames.push(applyName);\n\t\t\t});\n\t\t});\n\n        // only take the first of each array in every value of the map\n\t\tresult = [];\n\t\tgrouped.forEach( (value, key, map) => {\n\t\t\tresult.push(value[0]);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate calculateApplyRule(applyRuleObject: string, groupArray: InsightResult[]): number {\n\n\t\tconst applyKeyArray: string[] =  Object.keys(applyRuleObject);\n\t\tconst applyValueArray: string[] = Object.values(applyRuleObject);\n\t\tconst parsedField: string = this.queryOperator.parseField(applyValueArray[0]);\n\t\tswitch (applyKeyArray[0]) {\n\t\t\tcase \"MIN\" : {\n\t\t\t\tlet smallest: number = Number.MAX_VALUE;\n\t\t\t\tfor (let i = 1; i < groupArray.length; i++) {\n\t\t\t\t\tif (Number(groupArray[i][parsedField]) < smallest) {\n\t\t\t\t\t\tsmallest = Number(groupArray[i][parsedField]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn smallest;\n\t\t\t}\n\t\t\tcase \"AVG\" : {\n\t\t\t\tlet totalAvg: number = 0;\n\t\t\t\tfor (let i = 1; i < groupArray.length; i++) {\n\t\t\t\t\ttotalAvg += Number(groupArray[i][parsedField]);\n\t\t\t\t}\n\t\t\t\tconst calculated: number = (totalAvg / (groupArray.length - 1));\n\t\t\t\treturn calculated;\n\t\t\t}\n\n\t\t\tcase \"SUM\": {\n\t\t\t\tlet totalSum: number = 0;\n\t\t\t\tfor (let i = 1; i < groupArray.length; i++) {\n\t\t\t\t\ttotalSum += Number(groupArray[i][parsedField]);\n\t\t\t\t}\n\t\t\t\treturn totalSum;\n\t\t\t}\n\t\t\tcase \"MAX\" : {\n\t\t\t\tlet largest: number = Number.MIN_VALUE;\n\t\t\t\tfor (let i = 1; i < groupArray.length; i++) {\n\t\t\t\t\tif (Number(groupArray[i][parsedField]) > largest) {\n\t\t\t\t\t\tlargest = Number(groupArray[i][parsedField]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn largest;\n\t\t\t}\n\t\t\tcase \"COUNT\" : {\n\t\t\t\tconst occurrences = new Map<number | string, number>();\n\n\t\t\t\tfor (let i = 1; i < groupArray.length; i++) {\n\t\t\t\t\tconst currentCount = occurrences.get(groupArray[i][parsedField]) || 0;\n\t\t\t\t\toccurrences.set(groupArray[i][parsedField], currentCount + 1);\n\t\t\t\t}\n\t\t\t\treturn occurrences.size; // This is the sum of all occurrences.\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate handleGroup(query: any, result: InsightResult[]) {\n\t\tlet groupsArray: string[] = query.GROUP;\n\t\tlet map: Map<string, InsightResult[]> = new Map<string, InsightResult[]>();\n\t\tlet tempResult: InsightResult = {};\n\n        // Iterate sections in result\n\t\tresult.forEach((section, index) => {\n\n            // Create a groupKey for the section to match in maps.\n\t\t\tlet groupKey: string = \"\";\n\n\t\t\tgroupsArray.forEach((mOrSkey) => {\n\t\t\t\tconst parsedField: string = this.queryOperator.parseField(mOrSkey);\n\t\t\t\tgroupKey += section[parsedField] + \" |\";\n\t\t\t\ttempResult[parsedField] = section[parsedField];\n\t\t\t});\n\n\t\t\tgroupKey += \" group\";\n\n\t\t\tif (!map.has(groupKey)) {\n\t\t\t\tmap.set(groupKey, [tempResult]);\n\t\t\t}\n\n\t\t\tmap.get(groupKey)?.push(section);\n\t\t\ttempResult = {};\n\n\t\t});\n\t\treturn map;\n\t}\n\n\tprivate validateTransformationKeys(query: any): void {\n\t\treturn;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"14b62326e48652e47837cf6f1122f86fc667db13","contentHash":"02b1bc7838062edc6740897288b6f6f041f365155eddf7c3bbb9f2e381f98d59"}}